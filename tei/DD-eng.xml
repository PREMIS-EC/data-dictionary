<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../schema/TL-teiliteSchema.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:ead="http://ead3.archivists.org/schema/"
    xmlns:eg="http://www.tei-c.org/ns/Examples"
    xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
    xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:premis="http://www.loc.gov/premis/v3"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title xml:lang="eng">PREMIS Data Dictionary for Preservation Metadata</title>
                <title xml:lang="eng" type="part2">Version 3.0</title>
                <respStmt xml:lang="eng">
                    <resp>Prepared and maintained by the </resp>
                    <name>PREMIS Editorial Committee</name>
                </respStmt>
            </titleStmt>
            <editionStmt>
                <p xml:lang="eng">November 2015 Edition</p>
            </editionStmt>
            <publicationStmt>
                <publisher xml:lang="eng">Library of Congress, Network Development &amp; MARC
                    Standards Office</publisher>
                <address>
                    <addrLine>Library of Congress, Network Development &amp; MARC Standards
                        Office</addrLine>
                    <addrLine>101 Independence Ave., SE</addrLine>
                    <addrLine>Washington, DC 20540</addrLine>
                    <addrLine>USA</addrLine>
                    <addrLine>ndmso@loc.gov</addrLine>
                </address>
                <date when="2015"/>
                <idno>978-0-8444-9582-8</idno>
                <availability>
                    <licence>This work is licensed under a Creative Commons Attribution 4.0
                        International License (CC BY 4.0). See <ref
                            target="http://creativecommons.org/licenses/by/4.0/"
                            >http://creativecommons.org/licenses/by/4.0/</ref>. Some rights
                        reserved. No part of this publication may be reproduced, stored in a
                        retrieval system or transmitted in any form or by any means, electronic,
                        mechanical or photocopying, recording, or otherwise without attribution.
                        This is following PREMIS EC decsion on the 21st of April 2021</licence>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p xml:lang="eng">Born digital.</p>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <front>
            <titlePage xml:lang="eng">
                <docTitle>
                    <titlePart type="main">PREMIS Data Dictionary for preservation
                        metadata</titlePart>
                </docTitle>
                <docEdition>Version 3.0 -- June 2015 -- Revised November 2015 (based on pdf version
                    at https://www.loc.gov/standards/premis/v3/premis-3-0-final.pdf)</docEdition>
                <byline>Prepared and maintained by the</byline>
                <docAuthor>PREMIS Editorial Committee</docAuthor>
                <docImprint>
                    <docDate>2015</docDate>
                </docImprint>
                <graphic url="premis-wiki-1.png"/>
            </titlePage>
            <div xml:lang="eng" type="EnglishIntroduction">
                <div>
                    <head>ACKNOWLEDGMENTS</head>
                    <list type="simple">
                        <head>PREMIS Editorial Commttee Members</head>
                        <item>Rebecca Guenther, Library of Congress, Chair</item>
                        <item>Karin Bredenberg, Riksarkivet, Swedish National Archives</item>
                        <item>Angela Dappert, University of Portsmouth</item>
                        <item>Angela Di Iorio, Sapienza Università di Roma</item>
                        <item>Leslie Johnston, U.S. National Archives and Records Administration</item>
                        <item>Devon Landes, HBO</item>
                        <item>Peter McKinney, National Library of New Zealand</item>
                        <item>Evelyn McLellan, Artefactual Systems</item>
                        <item>Tracy Meehleib, Library of Congress</item>
                        <item>Sébastien Peyrard, Bibliothèque nationale de France</item>
                        <item>Pauline Sinclair, Preservica</item>
                        <item>Eld Zierau, Royal Library of Denmark</item>
                    </list>
                </div>
                <div>
                    <head>Special Thanks</head>
                   <list type="simple">
                        <head>The following contributed their expertise to previous versions as former
                            members of the PREMIS Editorial Committee:</head>
                        <item>Steve Bordwell, General Register Office for Scotland</item>
                        <item>Yair Brama, ExLibris</item>
                        <item>Olaf Brandt, Koninklijke Bibliotheek, Netherlands</item>
                        <item>Priscilla Caplan, Florida Center for Library Automation (co-chair of
                            original PREMIS Working Group)</item>
                        <item>Gerard Clifton, National Library of Australia</item>
                        <item>Markus Enders, British Library</item>
                        <item>Noreen Hill, Library and Archives Canada</item>
                        <item>Karsten Huth, Sächsisches Staatsarchiv, Saxon State Archives</item>
                        <item>David Lake, U.S. National Archives and Records Administration</item>
                        <item>Brian Lavoie, OCLC</item>
                        <item>Yaniv Levi, ExLibris</item>
                        <item>Bill Leonard, Library and Archives Canada</item>
                        <item>Rory McLeod, British Library</item>
                        <item>Robert Sharpe, Preservica</item>
                        <item>Robert Wolfe, HBO</item>
                        <item>Zhiwu Xie, Los Alamos National Laboratory</item>
                        <item>Sally Vermaaten, Statistics New Zealand</item>
                        <item>Kate Zwaard, U.S. Government Printing Office, Library of
                            Congress</item>
                    </list>
                    <list type="simple">
                        <head>In addition to Editorial Committee members, the following contributed their
                            expertise to the work on the Environment Working Group for PREMIS 3:</head>
                        <item>Conçalo Antunes, Instituto de Engenharia de Sistemas e
                            Computadores</item>
                        <item>Artur Caetano, Instituto de Engenharia de Sistemas e
                            Computadores</item>
                        <item>Carol Chou, Florida Virtual Campus</item>
                        <item>Janet Delve, University of Portsmouth</item>
                        <item>Martin Neumann, University of Karlsruhe</item>
                        <item>Michael Nolan, Intel</item>
                    </list>                    
                    <list type="simple">
                        <head>In addition to Editorial Committee members, the following contributed their
                            expertise to the work on the Conformance Statement for PREMIS 3:</head>
                        <item>Jay Gattuso, National Library of New Zealand</item>
                        <item>Jan Hutař, Archives New Zealand</item>
                        <item>Amy Kirchhoff, ITHAKA</item>
                        <item>Joseph Pawletko, New York University</item>
                    </list>
                    <list type="simple">
                        <head>The following people were the original <italic><bold>Pre</bold>servation
                                <bold>M</bold>etadata: <bold>I</bold>mplementation
                                <bold>S</bold>trategies</italic> (PREMIS) Working Group that developed
                            version 1 of the Data Dictionary:</head>
                        <item>Priscilla Caplan, Florida Center for Library Automation,
                            co-chair</item>
                        <item>Rebecca Guenther, Library of Congress, co-chair</item>
                        <item>Robin Dale, RLG liaison</item>
                        <item>Brian Lavoie, OCLC liaison</item>
                        <item>George Barnum, U.S. Government Printing Office</item>
                        <item>Charles Blair, University of Chicago</item>
                        <item>Olaf Brandt, Göttingen State and University Library</item>
                        <item>Mikki Carpenter, Museum of Modern Art</item>
                        <item>Adam Farquhar, British Library</item>
                        <item>David Gewirtz, Yale University</item>
                        <item>Keith Glavash, MIT/DSpace</item>
                        <item>Andrea Goethals, Florida Center for Library Automation</item>
                        <item>Cathy Hartman, University of North Texas</item>
                        <item>Helen Hodgart, British Library</item>
                        <item>Nancy Hoebelheinrich, Stanford University</item>
                        <item>Roger Howard, J. Paul Getty Museum</item>
                        <item>Sally Hubbard, Getty Research Institute</item>
                        <item>Mela Kircher, OCLC</item>
                        <item>John Kunze, California Digital Library</item>
                        <item>Vicky McCargar, Los Angeles Times</item>
                        <item>Jerome McDonough, New York University/METS</item>
                        <item>Evan Owens, Ithaka-Electronic Archiving Initiative</item>
                        <item>Erin Rhodes, U.S. National Archives and Records Administration</item>
                        <item>Madi Solomon, Walt Disney Corporation</item>
                        <item>Angela Spinazze, ATSPIN Consulting</item>
                        <item>Stefan Strathmann, Göttingen State and University Library</item>
                        <item>Günter Waibel, RLG</item>
                        <item>Lisa Weber, U.S. National Archives and Records Administration</item>
                        <item>Robin Wendler, Harvard University</item>
                        <item>Hilde van Wijngaarden, National Library of the Netherlands</item>
                        <item>Andrew Wilson, National Archives of Australia and British
                            Library</item>
                        <item>Deborah Woodyard-Robinson, British Library and Woodyard-Robinson
                            Holdings Ltd.</item>
                    </list>

                </div>
                <div>

                    <head>PREMIS WEBSITES &amp; EMAILS</head>

                    <p>PREMIS maintenance activity Web site: <ref
                            target="http://www.loc.gov/standards/premis/"
                            >http://www.loc.gov/standards/premis/</ref>.</p>
                    <!-- TODO: Update link nd email for PIG -->
                    <p>PREMIS Implementers' Group discussion list: pig@loc.gov. To subscribe, send
                        an e-mail to listserv@loc.gov with the message, "subscribe pig [your
                        name]".</p>
                    <p>Please send comments and questions to premis@loc.gov.</p>

                </div>
                <div>

                    <head>INTRODUCTION</head>

                    <p>The PREMIS Data Dictionary is a comprehensive, practical resource for
                        implementing preservation metadata in digital preservation systems. The Data
                        Dictionary defines preservation metadata that:</p>
                    <list type="bulleted">
                        <item>Supports the viability, renderability, understandability,
                            authenticity, and identity of digital objects in a preservation
                            context;</item>
                        <item>Represents the information most preservation repositories need to know
                            to preserve digital materials over the long term;</item>
                        <item>Emphasizes “implementable metadata”: rigorously defined, supported by
                            guidelines for creation, management, and use, and oriented toward
                            automated workflows; and,</item>
                        <item>Embodies technical neutrality: no assumptions made about preservation
                            technologies, strategies, metadata storage and management, etc.</item>
                    </list>
                </div>
                <div>
                    <head>Background</head>
                    <head>Development of the original PREMIS Data Dictionary</head>
                    <p>In June 2003, OCLC and RLG jointly sponsored the formation of the PREMIS
                                (<italic><bold>Pre</bold>servation <bold>M</bold>etadata:
                                <bold>I</bold>mplementation <bold>S</bold>trategies</italic>)
                        working group, comprised of international experts in the use of metadata to
                        support digital preservation activities. The working group’s membership
                        included more than 30 participants, representing five different countries
                        and a variety of domains, including libraries, museums, archives, government
                        agencies, and the private sector. Part of the working group’s charge was to
                        develop a core set of implementable preservation metadata, broadly
                        applicable across a wide range of digital preservation contexts and
                        supported by guidelines and recommendations for creation, management, and
                        use. This portion of the working group’s charge was fulfilled in May 2005
                        with the release of <italic>Data Dictionary for Preservation Metadata: Final
                            Report of the PREMIS Working Group</italic>. In addition to the Data
                        Dictionary, the working group also published a set of XML schemas to support
                        implementation of the Data Dictionary in digital preservation systems.</p>
                    <p>The PREMIS working group was established to build on the earlier work of
                        another initiative sponsored by OCLC and RLG: the Preservation Metadata
                        Framework (PMF) working group. In 2001–2002 the PMF working group outlined
                        the types of information that should be associated with an archived digital
                        object. Their report, <italic>A Metadata Framework to Support the
                            Preservation of Digital Objects</italic> (the
                        <italic>Framework</italic>), proposed a list of prototype metadata
                            elements.<note n="1">A Metadata Framework to Support the Preservation of
                            Digital Objects (Dublin, Ohio: OCLC Online Computer Library Center,
                            2002), <ref
                                target="http://www.oclc.org/research/projects/pmwg/pm_framework.pdf"
                                >
                            http://www.oclc.org/research/projects/pmwg/pm_framework.pdf</ref>.</note>However,
                        additional work was needed to make these prototype elements implementable.
                        The PREMIS working group was asked to take the PMF group’s work a step
                        further and develop a data dictionary of core metadata for archived digital
                        objects, as well as give guidance and suggest best practice for creating,
                        managing, and using the metadata in preservation systems.</p>
                    <p>Since the PREMIS working group had a practical rather than theoretical focus,
                        members were sought from institutions known to be operating or developing
                        preservation repository systems within the cultural heritage and information
                        industry sectors. Diverse perspectives were also sought. The working group
                        consisted of representatives from academic and national libraries, museums,
                        archives, government, and commercial enterprises in five different
                        countries. In addition, PREMIS called upon an international advisory
                        committee of experts to review progress.</p>
                    <p>To understand how preservation repositories were actually implementing
                        preservation metadata, in November 2003 the working group undertook a survey
                        of about 70 organizations thought to be active in or interested in digital
                        preservation, resulting in the report <italic>Implementing Preservation
                            Repositories for Digital Materials: Current Practice and Emerging Trends
                            in the Cultural Heritage Community</italic> (the <italic>Implementation
                            Survey Report</italic>).<note n="2"><italic>Implementing Preservation
                                Repositories for Digital Materials: Current Practice and Emerging
                                Trends in the Cultural Heritage Community</italic> (Dublin, Ohio:
                            OCLC Online Computer Library Center, 2004), <ref
                                target="http://www.oclc.org/research/projects/pmwg/surveyreport.pdf"
                                >http://www.oclc.org/research/projects/pmwg/surveyreport.pdf</ref></note>
                        The findings of this survey were extremely helpful in informing the working
                        group’s discussions as it developed the Data Dictionary.</p>
                </div>
                <div>
                    <head>Implementable, core preservation metadata</head>
                    <p>Both the earlier <italic>Framework</italic> and the PREMIS Data Dictionary
                        build on the Open Archival Information System (OAIS) reference model (ISO
                            14721).<note n="3">ISO 14721:2012: Space Data and information transfer
                            system—Open archival information system (OAIS)—Reference model (OAIS)
                            (Geneva, Switzerland: International Organization for Standardization,
                            Aug. 2012).</note> The OAIS information model provides a conceptual
                        foundation in the form of a taxonomy of information objects and packages for
                        archived objects, and the structure of their associated metadata. The
                            <italic>Framework</italic> can be viewed as an elaboration of the OAIS
                        information model, explicated through the mapping of preservation metadata
                        to that conceptual structure. The PREMIS Data Dictionary can be viewed as a
                        translation of the <italic>Framework</italic> into a set of implementable
                        semantic units. However, it should be noted that the Data Dictionary and
                        OAIS occasionally differ in terminology usage; these differences are noted
                        in the <ref target="#appendixGlossary">Glossary</ref> that accompanies this
                        report. Differences usually reflect the fact that PREMIS semantic units
                        require more specificity than the OAIS definitions provide, which is to be
                        expected when moving from a conceptual framework to an implementation. </p>
                    <p>The Data Dictionary defines “preservation metadata” as <italic>the
                            information a repository uses to support the digital preservation
                            process</italic>. Specifically, the group looked at metadata supporting
                        the functions of maintaining viability, renderability, understandability,
                        authenticity, and identity in a preservation context. Preservation metadata
                        thus spans a number of the categories typically used to differentiate types
                        of metadata: administrative (including Rights and permissions), technical,
                        and structural. Particular attention was paid to the documentation of
                        digital provenance (the history of an object) and to the documentation of
                        relationships, especially relationships among different objects within the
                        preservation repository. Version 3.0 of the Data Dictionary explicitly
                        expands the scope beyond repository boundaries in order to accommodate
                        seamless metadata representation across the digital object life-cycle.</p>
                    <p>The group considered a number of definitions of “core.” In one view, core
                        describes any metadata absolutely required under any circumstances. In
                        another, core means that metadata is applicable to any type of repository
                        implementing any type of preservation strategy. PREMIS uses this practical
                        definition: <italic>things that most working preservation repositories are
                            likely to need to know in order to support digital
                        preservation</italic>. The words “most” and “likely” were chosen
                        deliberately. Core does not necessarily mean mandatory, and some semantic
                        units were designated as optional when exceptional cases were apparent.</p>
                    <p>The concept of “implementability” also required definition. Most preservation
                        repositories deal with large quantities of data. Therefore, a key factor in
                        the implementability of preservation metadata is whether the values can be
                        automatically supplied and automatically processed by the repository.
                        Whenever possible the group defined semantic units that do not require human
                        intervention to supply or analyze. For example, controlled values from an
                        authority list are preferred over textual descriptions.</p>
                    <p>The working group decided that the Data Dictionary should be wholly
                        implementation independent. That is, the core metadata define information
                        that a repository needs to know, regardless of how, or even whether, that
                        information is stored. For instance, for a given identifier to be usable, it
                        is necessary to know the identifier scheme and the namespace in which it is
                        unique. If a particular repository uses only one type of identifier, the
                        repository would not need to record the scheme in association with each
                        object. The repository would, however, need to know this information and to
                        be able to supply it when exchanging metadata with other repositories.
                        Because of the emphasis on the need to know rather than the need to record
                        or represent in any particular way, the group preferred to use the term
                        “semantic unit” rather than “metadata element.” The Data Dictionary names
                        and describes semantic units.</p>
                </div>
                <div>
                    <head>PREMIS Maintenance Activity</head>
                    <p>Following the release of the Data Dictionary in 2005, the PREMIS working
                        group retired and the PREMIS Maintenance Activity, sponsored by the Library
                        of Congress, was initiated to maintain the Data Dictionary and coordinate
                        other work to advance understanding of preservation metadata and related
                        topics. In addition to providing a permanent Web home for the Data
                        Dictionary, XML schema, and related materials, the Maintenance Activity also
                        operates the PREMIS Implementers Group (PIG) discussion list and wiki,
                        conducts tutorials on the Data Dictionary and its use, and commissions
                        focused studies on preservation metadata topics. The Maintenance Activity
                        also established an Editorial Committee responsible for further development
                        of the Data Dictionary and the XML schema and promoting their use.
                        Themembership of the Editorial Committee reflects a variety of countries and
                        institutional backgrounds.</p>
                    <p>Users identify errors, and provide feedback on ways that the Data Dictionary
                        could be improved to increase its value and ease of application through a
                        variety of mechanisms: Discussion of issues takes place on the PREMIS
                        Implementers Group (PIG) discussion list and wiki, user group meetings take
                        place at PREMIS Implementation Fairs that are organized in conjunction with
                        major conferences and are advertised on the PREMIS website and through
                        mailing lists, and requests for changes can be submitted through the
                            <italic>PREMIS Data Dictionary and Schema Revision Process</italic>
                        specified at <ref
                            target="http://www.loc.gov/standards/premis/revision-process.html"
                            >http://www.loc.gov/standards/premis/revision-process.html</ref>.</p>
                    <p>The members of the Editorial Committee revise the Data Dictionary when a
                        sufficient level of commentary has accumulated to warrant doing so, making
                        every effort to engage stakeholders in the process of revision. The
                        Committee keeps the preservation community informed of issues being
                        discussed, solicits comment on proposed revisions, and consults outside
                        experts where appropriate.</p>
                </div>
                <div>
                    <head>Version History</head>
                    <p>
                        <table cols="2" >
                            <row role="label">
                                <cell><bold>Version</bold></cell>
                                <cell><bold>Release Date</bold></cell>
                            </row>
                            <row>
                                <cell>Version 1.0</cell>
                                <cell>May 2005</cell>
                            </row>
                            <row>
                                <cell><italic>Schema Version 1.0</italic></cell>
                                <cell><italic>17 May 2005</italic></cell>
                            </row>
                            <row>
                                <cell><italic>Schema Version 1.1</italic></cell>
                                <cell><italic>27 September 2005</italic></cell>
                            </row>
                            <row>
                                <cell>Version 2.0</cell>
                                <cell>March 2008</cell>
                            </row>
                            <row>
                                <cell><italic>Schema Version 2.0</italic></cell>
                                <cell><italic>17 July 2008</italic></cell>
                            </row>
                            <row>
                                <cell>Version 2.1</cell>
                                <cell>January 2011</cell>
                            </row>
                            <row>
                                <cell><italic>Schema Version 2.1</italic></cell>
                                <cell><italic>6 January 2011</italic></cell>
                            </row>
                            <row>
                                <cell>Version 2.2</cell>
                                <cell>July 2012</cell>
                            </row>
                            <row>
                                <cell><italic>Schema Version 2.2</italic></cell>
                                <cell><italic>15 May 2012</italic></cell>
                            </row>
                            <row>
                                <cell><italic>Schema Version 2.3</italic></cell>
                                <cell><italic>4 August 2014</italic></cell>
                            </row>
                            <row>
                                <cell>Version 3</cell>
                                <cell>June 2015</cell>
                            </row>
                        </table>
                    </p>
                    <p>Subsequent
                        versions of the Dictionary have taken advantage of the increase in use of
                        PREMIS and experience of implementing preservation solutions. They have
                        included corrections of errors, clarifications of some semantic units,
                        changes for consistency, and the addition of a few semantic units that
                        resulted from requests to the PREMIS Editorial Committee. Version 2.0 was a
                        major revision and version 2.1 added additional functionality, particularly
                        in the Rights entity. Version 2.2 was considered non-substantial as there
                        were no major changes affecting existing PREMIS descriptions. Version 2.3
                        contained only changes that affected the XML schema (by adding the ability
                        to designate use of specific controlled vocabularies); these were not
                        reflected in the Data Dictionary. Further information about this mechanism
                        is given under the section <!-- TODO: Internal refencing to ID's --> “Supplying Metadata Values”. Starting from version 2.2, a PREMIS OWL
                        ontology is available alongside the XML Schema. It allows one to provide a
                        PREMIS-endorsed flavor of the Data Dictionary so that one can express
                        preservation metadata in RDF. This ontology does not replace but complements
                        XML in areas where RDF may be better suited, such as querying or publishing
                        preservation metadata, or connecting repository-specific data to externally
                        maintained registries.</p>
                    <p>This version of the Data Dictionary, version 3, includes some major changes
                        and additions to the Dictionary. These can be highlighted as:</p>
                    <list type="bulleted">
                        <item>Repositioning of Intellectual Entity as a category of Object to enable
                            additional description within PREMIS and linking to related PREMIS
                            entities.</item>
                        <item>Repositioning of Environments (i.e. hardware and software needed to
                            use digital objects) so that they can be described and preserved reusing
                            the Object entity. That is to say, they can be described as Intellectual
                            Entities and preserved as Representation, File or Bitstream Objects. </item>
                        <item>Addition of physical Objects to the scope of PREMIS so that they can
                            be described and related to digital objects.</item>
                        <item>Addition of a new semantic unit to the Object entity:
                            preservationLevelType (O, NR) to indicate the type of preservation
                            functions expected to be applied to the object for the given
                            preservation level.</item>
                        <item>Addition of a new semantic unit to the Agent entity to express the
                            version of software Agents: agentVersion (O, NR).</item>
                        <item>Addition of a new semantic unit to the Event entity:
                            eventDetailInformation (O, R).</item>
                    </list>
                    <p><!-- TODO: Internal refencing to ID's --> Major additions
                        are discussed in detail below (see the “PREMIS Data Model” and “Environment” sections). Other additions are explained within the relevant section of the
                        Dictionary.</p>
                </div>
                <div>
                    <head>PREMIS Awards and Recognition</head>
                    <p>The PREMIS Data Dictionary was awarded the 2005 Digital Preservation Award
                        (given under the auspices of the British Conservation Awards), the 2006
                        Society of American Archivists Preservation Publication Award, and was a
                        finalist for the 2012 Digital Preservation Award for the most outstanding
                        contribution to digital preservation in the last decade.</p>
                </div>
                <div>
                    <head>The PREMIS Data Model</head>
                    <p>The PREMIS Data Dictionary defines <bold>semantic units</bold>. Each semantic
                        unit defined in the Data Dictionary is mapped to an entity that is organized
                        within a simple data model. A semantic unit can therefore be understood as a
                        property of an entity. The model defines four entities important in regard
                        to digital preservation activities: Objects, Events, Agents and Rights.<note
                            n="4">Other preservation metadata initiatives have developed other
                            models. The National Library of New Zealand defines four types of
                            entity: objects, files, processes, and metadata modification. Metadata
                            Standards Framework—Preservation Metadata (Revised) (Wellington:
                            National Library of New Zealand, June 2003), <ref
                                target="http://digitalpreservation.natlib.govt.nz/assets/Uploads/nlnz-data-model-final.pdf"
                                >
                                http://digitalpreservation.natlib.govt.nz/assets/Uploads/nlnz-data-model-final.pdf</ref>.</note>
                        Figure 1 provides a graphical illustration of the PREMIS Data Model.</p>
                    <figure>
                        <graphic url="PREMIS_Figure1.png"/>
                        <figDesc>Figure 1. The PREMIS Data Model</figDesc>
                    </figure>
                    <p>In Figure 1, entities are represented by boxes; relationships between
                        entities are represented by arrows. When arrows are bi-directional, then
                        each entity type contains a semantic unit allowing it to link to the other.
                        So, for example, the Rights entity includes a semantic unit recording
                        information about the relationship with an Agent, and the Agent entity
                        includes a semantic unit recording information about associated Rights.</p>
                    <p>The arrow pointing from the Objects entity back to itself indicates that the
                        semantic units defined in the Data Dictionary support the recording of
                        relationships between Objects. No other entity in the data model supports
                        relationships of this type; in other words, while Objects can be related to
                        other Objects, Events cannot be related to other Events, Agents cannot be
                        related to other Agents, and so on. </p>
                    <p>The entities in the PREMIS data model are defined as follows:</p>
                    <p><bold>Object (or Digital Object):</bold> a discrete unit of information
                        subject to digital preservation.<note n="5">Note that the PREMIS definition
                            of an Object entity differs from the definition of digital object
                            commonly used in the digital library community, which holds a digital
                            object to be a combination of identifier, metadata, and data. This is
                            not intended to be a conflict. The Object entity in our model is an
                            abstraction defined only to cluster attributes (semantic units) and
                            clarify relationships.</note> Version 3 introduces the notion that this
                        can be an environment used as part of the preservation process.</p>
                    <p><bold>Environment:</bold> Technology (software or hardware) supporting a
                        Digital Object in some way (e.g. rendering or execution). Environments can
                        be described as Intellectual Entities and captured and preserved in the
                        preservation repository as Representations, Files and/or Bitstreams.</p>
                    <p><bold>Event:</bold> an action that involves or affects at least one Object or
                        Agent associated with or known by the preservation repository.</p>
                    <p><bold>Agent:</bold> person, organization, or software program/system
                        associated with Events in the life of an Object, or with Rights attached to
                        an Object. It can also be related to an environment Object that acts as an
                        Agent.</p>
                    <p><bold>Rights Statement:</bold> assertion of one or more Rights or permissions
                        pertaining to an Object and/or Agent.</p>
                    <p>Each semantic unit defined in the Data Dictionary is mapped to one of the
                        entities in the data model. In this sense, a semantic unit may be viewed as
                        a property of an entity. For example, the semantic unit
                            <italic>size</italic> is a property of an Object entity. Semantic units
                        have values: for a particular object the value of <italic>size</italic>
                        might be “843200004.”</p>
                    <p>In most cases, a particular semantic unit is unambiguously a property of only
                        one type of entity. The size of an object is clearly a property of the
                        Object entity. In some cases, however, a semantic unit applies equally to
                        two or more types of entity. For example, Events have outcomes, which could
                        be a property of the Event or the Object or Agent affected. If a migration
                        eventcreates a file that has lost some important feature, the loss of that
                        feature might be considered an outcome of the event, and therefore a
                        property of the Event entity. Alternatively, it might be considered an
                        attribute of the new file, and therefore a property of the Object entity.
                        When a semantic unit applies equally to multiple entity types, the decision
                        has been taken that the semantic unit should be associated with only one
                        type of entity in the Data Dictionary. The data model relies upon links
                        between the different entities to make these relationships clear. In the
                        example above, the loss of the feature is treated as a detailed outcome of
                        the Event, where the Event contains the identifier of the Object involved.
                        What is important is that this association is arbitrary and is not meant to
                        imply that a particular implementation is required. The choice of semantic
                        unit is down to individual implementations.</p>
                    <p>In some cases a semantic unit takes the form of a <bold>container</bold> that
                        groups a set of related semantic units. For example, the semantic unit
                            <italic>identifier</italic> groups the two semantic units
                            <italic>identifierType</italic> and <italic>identifierValue</italic>.
                        The grouped subunits are called <bold>semantic components</bold> of the
                        container. Some containers are defined as <bold>extension containers</bold>,
                        to allow the use of metadata encoded according to an external schema. This
                        enables PREMIS to be extended with metadata elements that are more granular,
                        non-core, or otherwise out of scope for the Data Dictionary.</p>
                    <p>A <bold>relationship</bold> is a statement of association between instances
                        of entities. “Relationship” can be interpreted broadly or narrowly, and
                        expressed in many different ways. For example, the statement “Object A is of
                        format B” could be considered a relationship between A and B. The PREMIS
                        model, however, treats format B as a property of Object A. PREMIS reserves
                        “relationship” for associations between two or more Object entities or
                        between entities of different types, such as an Object and an Agent.</p>
                </div>
                <div>
                    <head>More on Objects</head>
                    <p>The Object entity has four subcategories: Intellectual Entity,
                        Representation, File, and Bitstream.</p>
                    <p>An <bold>Intellectual Entity</bold> is a distinct intellectual or artistic
                        creation that is considered relevant to a designated community in the
                        context of digital preservation: for example, a particular book, map,
                        photograph, database, or hardware or software. An Intellectual Entity can
                        include other Intellectual Entities; for example, a web site can include a
                        web page and a web page can include an image. An Intellectual Entity may
                        have one or more digital or non-digital Representations.</p>
                    <p>A <bold>Representation</bold> is the set of files, including structural
                        metadata, needed for a complete rendition of an Intellectual Entity. For
                        example, a journal article may be complete in one PDF file; this single file
                        constitutes the Representation. Another journal article may consist of one
                        SGML file and two image files; these three files constitute the
                        Representation. A third article may be represented by one TIFF image for
                        each of 12 pages plus an XML file of structural metadata showing the order
                        of the pages; these 13 files constitute the Representation. Starting with
                        PREMIS version 3.0 physical items, such as manuscripts or printed documents,
                        may also be Representations so that digital and non-digital Representations
                        can be captured uniformly.</p>
                    <p>A <bold>File</bold> is a named and ordered sequence of bytes that is known to
                        an operating system. A File can be zero or more bytes and has a File format,
                        access permissions, and File system characteristics such as size and last
                        modification date.</p>
                    <p>A <bold>Bitstream</bold> is contiguous or non-contiguous data within a file
                        that has meaningful common properties for preservation purposes. A Bitstream
                        cannot be transformed into a standalone file without the addition of file
                        structure (headers, etc.) and/or reformatting the Bitstream to comply with
                        some particular file format.</p>
                    <p>The relationship between the subcategories is illustrated in Figure 2. The
                        subcategories are discussed in more detail below.</p>
                    <figure>
                        <graphic url="PREMIS_Figure2.png" />
                        <figDesc>Figure 2. Conceptual view between object categories</figDesc>
                    </figure>
                </div>
                <div>
                    <head>Intellectual Entities</head>
                    <p>An <bold>Intellectual Entity</bold> is a distinct intellectual or artistic
                        creation that is considered relevant to a designated community in the
                        context of digital preservation. An Intellectual Entity can include other
                        Intellectual Entities and it may have one or more Representations.</p>
                    <p>Before versions 3.0 of the Data Dictionary Intellectual Entities were
                        considered out of scope for PREMIS, since many types of Intellectual
                        Entities--such as books, articles, images, archival collections, or
                        statistical studies – do not necessarily need to be described as part of the
                        preservation metadata and are well-served by descriptive metadata that
                        supports their discovery and retrieval from outside the preservation
                        metadata.</p>
                    <p>In version 3.0, one now has the choice of modeling Intellectual Entities
                        outside PREMIS or within it.</p>
                    <p>Consider an example where the Intellectual Entity is specified outside PREMIS
                        (as has been the case in previous versions). A TIFF Representation for an
                        image has the identifier “galapagos.6754.1”. Note that instead of using the
                            <italic>linkingIntellectualEntityIdentifier</italic> from version 2, the
                        Representation now links to the externally specified Intellectual Entity
                        using a structural “represents” relationship with a
                            <italic>relatedObjectIdentifier</italic> whose value is an external
                        actionable HTTP URI identifier. There may be additional Representations,
                        such as a jpg image or a thumbnail, relating to the same Intellectual
                        Entity. In this case no explicit PREMIS Object is created for the
                        Intellectual Entity.</p>
                    <p>
                        <table cols="1">
                            <row>
                                <cell> </cell>
                            </row>
                            <row>
                                <cell>premis:objectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierType="hdl"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierValue="galapagos.6754.1"</cell>
                            </row>
                            <row>
                                <cell>premis:objectCategory=representation </cell>
                            </row>
                            <row>
                                <cell>premis:relationship</cell>
                            </row>
                            <row>
                                <cell n="1">premis:relationshipType="structural"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:relationshipSubType="represents"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:relatedObjectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="2">premis:relatedObjectIdentifierType="URI"</cell>
                            </row>
                            <row>
                                <cell n="2">premis:relatedObjectIdentifierValue="http://natureweb/col1.galapagos6754/default.html"</cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                        </table>
                    </p>
                    <p>Alternatively, the Intellectual Entity can be modeled as an autonomous Object
                        within PREMIS with objectCategory "Intellectual Entity". PREMIS
                        implementation experience and the modeling work of the Planets Project<note
                            n="6">Report on policy and strategy models for libraries, archives and
                            data centres, July 2009, <ref
                                target="http://www.planets-project.eu/docs/reports/Planets_PP2_D3_ReportOnPolicyAndStrategyModelsM36_Ext.pdf"
                                >
                                http://www.planets-project.eu/docs/reports/Planets_PP2_D3_ReportOnPolicyAndStrategyModelsM36_Ext.pdf</ref>.</note>
                        have shown that repositories may have a need to record descriptive metadata
                        as well as preservation information, such as significant properties,
                        relationships, rights, and related events information, at the Intellectual
                        Entity level.</p>
                    <p>In this second example, the Intellectual Entity is instead specified within
                        PREMIS. Once again, aTIFF Representation for an image has the identifier
                        “galapagos.6754.1”. However, this time its descriptive metadata is captured
                        in an Intellectual Entity instance. The Intellectual Entity’s identifier
                        within PREMIS is “col1.galapagos6754”, a stable handle identifier, which is
                        persistent and suited for linking within the repository. Additionally, the
                        Intellectual Entity has an actionable identifier (HTTP URI), which links to
                        its catalog record. Furthermore it records the Event (E004) when the
                        Intellectual Entity was added to the digital collection. The repository
                        creates separate records for the Representation, the Intellectual Entity,
                        and the related Event:</p>
                    <p>For the image Representation linking to its Intellectual Entity in
                        PREMIS:</p>
                    <p>
                        <table cols="1">
                            <row>
                                <cell> </cell>
                            </row>
                            <row>
                                <cell>premis:objectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierType="hdl"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierValue="galapagos.6754.1"</cell>
                            </row>
                            <row>
                                <cell>premis:objectCategory=representation</cell>
                            </row>
                            <row>
                                <cell>premis:relationship</cell>
                            </row>
                            <row>
                                <cell n="1">premis:relationshipType="structural"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:relationshipSubType="represents"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:relatedObjectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="2">premis:relatedObjectIdentifierType="hdl"</cell>
                            </row>
                            <row>
                                <cell n="2">premis:relatedObjectIdentifierValue="col1.galapagos6754"</cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                        </table>
                    </p>
                    <p>For its Intellectual Entity in PREMIS recording both identifiers and the
                        Event:</p>
                    <p><table cols="1">
                            <row>
                                <cell> </cell>
                            </row>
                            <row>
                                <cell>premis:objectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierType="hdl"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierValue="col1.galapagos6754"</cell>
                            </row>
                            <row>
                                <cell>premis:objectCategory=intellectual entity</cell>
                            </row>
                            <row>
                                <cell>premis:objectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierType="URI"</cell>
                            </row>
                            <row>
                                <cell n="1">premis:objectIdentifierValue="http://natureweb/col1.galapagos6754/default.html"</cell>
                            </row>
                            <row>
                                <cell>premis:objectCategory=intellectual entity</cell>
                            </row>
                            <row>
                                <cell>premis:linkingEventIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">premis:linkingEventIdentifierType="Local</cell>
                            </row>
                            <row>
                                <cell n="1">Repository"premis:linkingEventIdentifierValue="E004"</cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                    </table>
                    </p>
                    <p>Intellectual Entities occur at all levels of aggregation from collections
                        down to individual embedded images. They were introduced because
                        somerepositories have a need to describe sets of content containing multiple
                        Representations that are primarily aggregated for preservation purposes. For
                        example, an Intellectual Entity may be used to record information about
                        packages containing multiple Representations that are used for
                        inter-repository exchange (e.g. the TIPR Repository Exchange Format<note
                            n="7">TIPR: Towards Interoperable Digital Repositories. Repository
                            eXchange Package (RXP) Spec, Version 1.0. <ref
                                target="http://wiki.fcla.edu/TIPR/21">
                                http://wiki.fcla.edu/TIPR/21</ref>.</note>). Outputs from complex
                        Events such as web crawls may also be represented as Intellectual Entities.
                        To support these and other use cases, Intellectual Entities are now treated
                        as a category of Object in the PREMIS Data Model. The metadata in PREMIS for
                        Intellectual Entities includes only that which supports the preservation
                        process and not full descriptive metadata required for discovery. External
                        metadata schemes are used for this purpose, and there are various methods to
                        relate the PREMIS Object to its descriptive metadata (e.g. a link to a
                        catalog record as illustrated above; descriptive metadata in a METS<note
                            n="8">Metadata Encoding &amp; Transmission Standard (METS), <ref
                                target=" http://www.loc.gov/standards/mets/"
                                >http://www.loc.gov/standards/mets/</ref>.</note> document; links
                        between a preservation repository and another system).</p>
                    <p>Use of Intellectual Entities needs to be adapted to the stakeholder’s use
                        case. For example, in the library setting, types of Intellectual Entities
                        may include work, expression, manifestation or item to capture useful FRBR
                        distinctions [Functional Requirements for Bibliographic Records <note n="9"
                            >IFLA, Functional Requirements for Bibliographic Records (Munich: K.G.
                            Saur, 1998), <ref target="http://www.ifla.org/VII/s13/frbr/frbr.pdf"
                                >http://www.ifla.org/VII/s13/frbr/frbr.pdf</ref>.</note>]. In an
                        archival setting, Intellectual Entity types such as fonds and series are
                        relevant and may be supported for the repository. Most repositories support
                        discovery and delivery of Intellectual Entities such as a book, moving
                        image, or article. But repositories may also choose to manage Intellectual
                        Entities at a larger scale, such as a collection, or as a fine-grained
                        component, such as an embedded table or image. It is up to the repository
                        which types of Intellectual Entities it supports and represents in PREMIS.
                        PREMIS supports this modeling through flexible relationship subtypes for
                        capturing their relationships to other objects.</p>
                    <p>PREMIS users can choose to continue using Intellectual Entities to simply
                        identify PREMIS-external descriptive metadata. If a repository does not
                        manage Intellectual Entities, it does not need to record metadata about
                        them.</p>
                </div>
                <div>
                    <head>Representations</head>
                    <p>The goal of many preservation repositories is to maintain usable forms of
                        Intellectual Entitiesover time. For an Intellectual Entity to be displayed,
                        played, or otherwise made useable to a human, all of the files making up at
                        least one form of that Intellectual Entity must be identified, stored, and
                        maintained so that they can be assembled and rendered for a user at any
                        given time. A Representation is the set of Files required to do this.</p>
                    <p>PREMIS chose the term “Representation” to avoid the term “manifestation” as
                        it is used in the FRBR. In FRBR a manifestation entity is “all the physical
                        objects that bear the same characteristics in respect to both intellectual
                        content and physical form.”<note n="10">Ibid., p.21.</note> In the PREMIS
                        model a Representation is <bold>a single instance</bold> of <italic>an
                            Intellectual Entity held in a preservation repository</italic>; note the
                        difference in multiplicity ‘(all’ versus ‘a single instance’).</p>
                    <p>A preservation repository might hold more than one representation of the same
                        Intellectual Entity. For example, the repository might acquire a single
                        image (say, “Statue of a horse”) as a TIFF File. At some point the
                        repository creates a derivative PEG2000 file from the TIFF and keeps both
                        files. Each of these files would constitute a representation of “Statue of a
                        horse.”</p>
                    <p>In a more complicated example, “Statue of a horse” might be a part of an
                        article consisting of that TIFF image and a file of SGML-encoded text. If
                        the repository created a JPEG2000 version of the TIFF, it would hold two
                        Representations of the article: the TIFF and the SGML fileswould make up one
                        representation, while the JPEG2000 and the SGML files would make up another
                        representation. How those representations are stored is implementation
                        specific. A repository might choose to store a single copy of the SGML file,
                        which would then be shared between representations. Alternatively, the
                        repository could choose to duplicate the SGML file and store two identical
                        copies of it.</p>
                    <p>Not all preservation repositories will be concerned with representations. A
                        repository might, for example, preserve File objects only and rely on
                        external Agents to assemble these objects into usable representations. If he
                        repository does not manage representations, it does not need to record
                        metadata about them.</p>
                </div>
                <div>
                    <head>Files, Bitstreams, and Filestreams</head>
                    <p>A File in the PREMIS data model is similar to the idea of a computer file in
                        ordinary usage: a set of zero or more bytes known to an operating system.
                        Files can be read, written, and copied. Files have names and formats.</p>
                    <p>A Bitstream as defined in the PREMIS data model is a set of bits embedded
                        within a file. This differs from common usage, where a bitstream could in
                        theory span more than one file. A good example of a file with embedded
                        bitstreams is a TIFF file containing two images.</p>
                    <p>According to the TIFF file format specification a TIFF file must contain a
                        header containing some information about the file. It may then contain one
                        or more images. In the PREMIS data model each of these images is a bitstream
                        and can have properties such as identifiers, location, inhibitors, and
                        detailed technical metadata (e.g., color space).</p>
                    <p>Some bitstreams have the same properties as files and some do not. The image
                        embedded within the TIFF file clearly has different properties from the file
                        itself. However, in another example, three TIFF files could be aggregated
                        within a larger tar file. In this case the three TIFF files are also
                        embedded bitstreams, but they have all the properties of TIFF files
                        (although different properties from tar files).</p>
                    <p>The PREMIS data model refines the definition of <bold>Bitstream</bold> to
                        include only those embedded bitstreams that cannot be transformed into
                        standalone files without the addition of file structure (e.g., headers) or
                        other reformatting to comply with some particular file format specification.
                        Examples of these bitstreams include an image within a TIFF 6.0 file, audio
                        data within a WAVE file, or graphics within a Microsoft Word file.</p>
                    <p>Some embedded bitstreams can be transformed into standalone files without
                        adding any additional information, although a transformation process such as
                        decompression, decryption, or decoding may have to be performed on the
                        bitstream in the extraction process. Examples of these bitstreams include a
                        TIFF within a tar file, or an encoded EPS within an XML file. In the PREMIS
                        data model these bitstreams are defined as “filestreams”, that is, true
                        files embedded within larger files.</p>
                    <p>Filestreams have all of the properties of <bold>Files</bold>, while
                            <bold>Bitstreams</bold> do not. In the Data Dictionary, the column for
                        “File” applies to both files and filestreams. The column for “Bitstream”
                        applies to the subset of bitstreams that are not filestreams and that adhere
                        to the stricter PREMIS definition of <bold>Bitstream</bold>. The location
                            (<italic>contentLocation</italic> in the Data Dictionary) of a file
                        would normally be a location in storage; while the location of a filestream
                        or bitstream would normally be the starting offset within the embedding
                        file.</p>
                </div>
                <div>
                    <head>Complete Examples</head>
                    <p>The relationship between Object categories can be illustrated by a couple of
                        examples:</p>
                    <p><bold>Example 1, <italic>Animal Antics</italic></bold>(Figure 3): The book
                            <italic>Animal Antics</italic> was published in 1902. A library
                        digitized <italic>Animal Antics</italic>, creating one TIFF file for each of
                        189 pages. As structural metadata, it created an XML file showing how the
                        images are assembled into a complete book. The library then performed OCR on
                        the TIFF images, ultimately creating a single large text file that was
                        marked up by hand in SGML. The library submitted 189 TIFF files, one XML
                        file, and one SGML file to a preservation repository.</p>
                    <p>To the repository <italic>Animal Antics</italic> is an Intellectual Entity:
                        it is a reasonable unit that can be described as a whole, with properties
                        such as an author, a title, and a publication date. <italic>Animal
                            Antics</italic> also has significant characteristics that need to be
                        maintained through preservation actions such as the formatting and color of
                        text. The repository has two representations, one consisting of 189 TIFF
                        files and an XML file, and the other consisting of one SGML file. Each
                        representation could render a complete version of <italic>Animal
                            Antics</italic>, albeit with different unctionalities. The repository
                        will record metadata about one Intellectual Entity, two Representation
                        objects and 191 File objects.</p>
                    <figure>
                        <graphic url="PREMIS_Figure3.png"/>
                        <figDesc>Figure 3. Animal Antics Intellectual Entity Example</figDesc>
                    </figure>
                    <p><bold>Example 2, <italic>Welcome to U</italic></bold>: Welcome to U,
                        submitted to a preservation repository as an AVI (Audio Video Interleaved)
                        File, is a 10-minute movie introducing new students to a university
                        campus.</p>
                    <p><italic>Welcome to U</italic> is an Intellectual Entity. The repository has
                        one representation, which consists of a single AVI file. The repository’s
                        preservation strategy requires that it manage the audio bits of the AVI file
                        separately from the video bits. The repository will record metadata about
                        one Intellectual Entity object, one Representation object, one File object,
                        and two Bitstream objects.</p>
                </div>
                <div>
                    <head>Environments</head>
                    <p>In order to preserve Digital Objects, repositories need to have information
                        about the elements of the technical stack of software, hardware and other
                        dependencies needed to correctly interpret the representations, files and
                        bitstreams. Each element of such a technical stack is an environment.</p>
                    <p>Starting with PREMIS version 3.0, Object entities can be used to capture
                        environments that are relevant to the content of the repository. Like
                        content Objects, environments can be described at all Object category levels
                        (Intellectual Entity, Representation, File, Bitstream). Intellectual
                        Entities are used to record descriptive information for an environment. An
                        environmentIntellectual Entity can be used to define its function (e.g., is
                        it a software application or a hardware peripheral) and designation
                        (including name and version information). It may reference one or more
                        corresponding entities in an external registry, such as PRONOM or UDFR.</p>
                    <p>The repository may or may not hold an actual implementation of such an
                        environment (e.g., hold executable software) as a Representation, File
                        and/or Bitstream. These can provide access to content bitstreams, files or
                        representations held in the repository. These actual implementations can be
                        an identical or functionally equivalent technical stack to the stack used
                        originally. For example, if a repository holds video files it might, in
                        addition, hold software capable of rendering such videos and an image of an
                        operating system capable of running that software.</p>
                    <p>A software Agent modeled in PREMIS can be related to the environment
                        Intellectual Entities, Representations, Files or Bitstreams that describe
                        and capture the Agent.</p>
                    <p><!-- TODO: Internal refencing to ID's -->
                        Environments are discussed in further detail
                        in the section “Special Topics”</p>
                </div>
                <div>
                    <head>More on Events</head>
                    <p>The Event entity aggregates metadata about actions. A preservation repository
                        will record eventsfor many reasons. Documentation of actions that modify an
                        Object is critical to maintaining digital provenance, a key element of
                        authenticity. Actions that create new relationships or alter existing
                        relationships are important in explaining those relationships. Even actions
                        that alter nothing, such as validity and integrity checks on objects, can be
                        important to record for management purposes. For billing or reporting
                        purposes some repositories may track actions such as requests for
                        dissemination or reports.</p>
                    <p>It is up to the repository which actions to record as events. Some actions
                        may be considered too trivial to record, or may be recorded in other systems
                        (as, for example, routine file backups may be recorded in storage management
                        systems). It is also an implementation decision whether to record events
                        that occur before an object is ingested into the preservation repository,
                        for example, derivation from an earlier object, or changes of custody. In
                        theory, events following the deaccessioning of an Intellectual Entity could
                        also be recorded. For example, a repository might first deaccession an
                        Intellectual Entity, then delete all file objects associated with that
                        entity, and record each deletion as an event.</p>
                    <p>In the data model Objects are associated with events in two ways. If an
                        object is related to a second object through (because of) an event, the
                        event identifier is recorded in the <italic>relationship</italic> container
                        as the semantic component <italic>relatedEventIdentifier</italic>. If the
                        object simply has an associated event with no relationship to a second
                        object, the event identifier is recorded in the container
                            <italic>linkingEventIdentifier</italic>.
                        <!-- TODO: Internal refencing to ID's -->(For more information on relationships, see
                        section "Relationships between Objects".)</p>
                    <p>For example, assume a preservation repository ingests an XML file (object A)
                        and creates a normalized version of it (object B) by running a program
                        (event 1). In the metadata for object B, this could be recorded in
                            <italic>relationship</italic> as follows:</p>
                    <p><table cols="1">
                            <row>
                                <cell> </cell>
                            </row>
                            <row>
                                <cell>relationshipType = “derivation”</cell>
                            </row>
                            <row>
                                <cell>relationshipSubType = “has source”</cell>
                            </row>
                            <row>
                                <cell>relatedObjectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">relatedObjectIdentifierType = “local”</cell>
                            </row>
                            <row>
                                <cell n="1">relatedObjectIdentifierValue = “A”</cell>
                            </row>
                            <row>
                                <cell>relatedEventIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">relatedEventIdentifierType = “local”</cell>
                            </row>
                            <row>
                                <cell n="1">relatedEventIdentifierValue = “1”</cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                    </table>                         
                          </p>
                    <p>Note that since sequencing is not applicable, the semantic unit
                            <italic>relatedEventSequence</italic> is not included.</p>
                    <p>Continuing with this example, assume that after object B is created it is
                        validated by running another program (event 2). In this case event 2
                        pertains only to object B, not to the relationship between B and A. The link
                        to event 2 would be recorded as <italic>linkingEventIdentifier</italic>:</p>
                    <p><table cols="1">
                            <row>
                                <cell> </cell>
                            </row>
                            <row>
                                <cell>linkingEventIdentifierType = “local”</cell>
                            </row>
                            <row>
                                <cell>linkingEventIdentifierValue = “2” </cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                    </table>
                        </p>
                    <p>A given object can be associated in these two ways with any number of
                        events.</p>
                    <p>All events have outcomes (success, failure, etc.). Some events also have
                        outputs; for example, the execution of a program creates a new file object.
                        The semantic units <italic>eventOutcome</italic> and
                            <italic>eventOutcomeDetail</italic> are intended for documenting
                        qualitative outcomes. For example, if the event is an act of format
                        validation, the value of <italic>eventOutcome</italic> might be a code
                        indicating the object is fully valid. Alternatively, it might be a code
                        indicating the object is not fully valid, and eventOutcomeDetail could be
                        used to describe all anomalies found. If the program performing the
                        validation writes a log of warnings and error messages, a second instance of
                            <italic>eventOutcomeDetail</italic> could be used to store or point to
                        that log.</p>
                    <p>If an event creates objects that are stored in the repository, those objects
                        should be described as entities with a complete set of applicable metadata
                        and associated with the event by links. Some additional aspects of an event
                        other than its outcomes or outputs might be recorded, such as the specific
                        parameters used during a migration event, the nature of the operation
                        (automated, manual or semi-automated) and so on. Such information can be
                        recorded in <italic>eventDetail</italic>.</p>
                </div>
                <div>
                    <head>More on Agents</head>
                    <p>Agents are clearly important but are not the focus of the Data Dictionary,
                        which defines only a means to identify the agent and a classification of
                        agent type (person, organization, or software). While more metadata is
                        likely to be necessary, this is left to other initiatives to define in
                        detail. In version 3.0, the <italic>agentVersion</italic> semantic unit is
                        added to the Data Dictionary.</p>
                    <p>The data model diagram shows how Agents relate to other entities. An Agent
                        can be related to Rights Statements in which the agent has an interest. An
                        Agent can also relate to the Event entity in which the Agent takes an
                        action. Each Event can have one or more related Agents. Because a single
                        Agent can perform different roles in different Events, the role of the Agent
                        is a property of the Event entity, not of the Agent entity. Agents relate to
                        Objects in 2 ways: 1) Agents affect Objects that are involved in an Event;
                        2) Agents are software Agents that are described through an environment
                        Object. In the first case Agents influence Objects only indirectly through
                        Eventsand are not directly linked to the Object. In the second case the
                        environment Object further describes and captures the software Agent. For
                        this situation there is a direct link
                            (<italic>linkingEnvironmentIdentifier</italic>) from the Agent to the
                        environment.</p>
                </div>
                <div>
                    <head>More on Rights</head>
                    <p>Many efforts are concerned with metadata related to intellectual property
                        rights and permissions, from rights expression languages to the
                        &lt;indecs&gt; <note n="11">Godfrey Rust and Mark Bide, The &lt;indecs&gt;
                            Metadata Framework: Principles, Model, and Data Dictionary, June 2000,
                                <ref
                                target="http://www.doi.org/topics/indecs/indecs_framework_2000.pdf"
                                >http://www.doi.org/topics/indecs/indecs_framework_2000.pdf</ref></note>
                        framework. However, only a small body of work addresses rights and
                        permissions specifically related to digital preservation. After the
                        publication of the first edition of the PREMIS Data Dictionary, the Library
                        of Congress in its capacity as PREMIS Maintenance Agency commissioned a
                        paper, “Rights in the PREMIS Data Model,” by Karen Coyle<note n="12">Coyle,
                            Karen, Rights in the PREMIS Data Model, <ref
                                target="http://www.loc.gov/standards/premis/Rights-in-the-PREMIS-Data-Model.pdf"
                                >
                                http://www.loc.gov/standards/premis/Rights-in-the-PREMIS-Data-Model.pdf</ref>.</note>.
                        This paper discussed copyright, licenses, and statute as three bases for
                        establishing intellectual property rights, and recommended an expansion of
                        the rights information in the Data Dictionary to include information on
                        these bases.</p>
                    <p>Consequently, the <italic>permissionStatement</italic> in the original Data
                        Dictionary was replaced with the <italic>rightsStatement</italic> in version
                        2.0. In that revision the Editorial Committee relied heavily upon the Coyle
                        paper, background materials such as Peter Hirtle's “Digital Preservation and
                            Copyright,<note n="13">Hirtle, Peter B., Digital Preservation and
                            Copyright, <ref
                                target="http://fairuse.stanford.edu/commentary_and_analysis/2003_11_hirtle.html"
                                >
                                http://fairuse.stanford.edu/commentary_and_analysis/2003_11_hirtle.html</ref>.</note>”
                        and he California Digital Library's draft copyrightMD schema<note n="14">
                            California Digital Library, copyrightMD schema, <ref
                                target="http://www.cdlib.org/inside/projects/rights/schema/">
                                http://www.cdlib.org/inside/projects/rights/schema/</ref>.</note>.
                        It should be noted that the proposed uses of copyrightMD and PREMIS Rights
                        are rather different. The copyrightMD schema is intended to document factual
                        information to allow a human being to make an informed copyright assessment
                        of a given work. The PREMIS <italic>rightsStatement</italic> is intended to
                        allow a preservation repository to determine whether it has the right to
                        perform a certain action in an automated fashion, with some documentation of
                        the basis for the assertion.</p>
                    <p>Version 2.2 added semantic units to <italic>rightsStatement</italic> to
                        specify a rights basis other than copyright, license or statute (e.g.
                        institutional policy); to be able to link to further information about the
                        rights through a documentation identifier; to associate applicable dates
                        with a Rightsstatement; and to allow for term of restriction in addition to
                        the existing term of grant.</p>
                    <p>Version 3 contains no new additions or changes related to Rights
                        Statements.</p>
                </div>
                <div>
                    <head>General Topics on the Structure and Use of the Data Dictionary</head>
                    <p>The semantic units defined in the PREMIS Data Dictionary are bound together
                        by a few structural conventions that help organize the Data Dictionary and
                        support its implementation. These conventions include the use of
                        identifiers; the manner in which relationships are handled in the Data
                        Dictionary; and the “1:1 Principle” relating metadata to Objects.</p>
                </div>
                <div>
                    <head>Identifiers</head>
                    <p>Instances of Objects, Events, Agents, and Rights statements are uniquely
                        identified by a set of semantic units collected under “Identifier”
                        containers. These semantic units follow an identical syntax and structure,
                        regardless of entity type:</p>
                    <p><table cols="1">
                            <row>
                                <cell> </cell>
                            </row>
                            <row>
                                <cell>[entity type]Identifier</cell>
                            </row>
                            <row>
                                <cell n="1">[entity type]IdentifierType: domain in which the identifier is unique</cell>
                            </row>
                            <row>
                                <cell n="1">[entity type]IdentifierValue:
                        identifier string</cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                    </table>
                    </p>
                    <p>The following examples illustrate the use of this syntax to identify an
                        Object residing in Harvard’s Digital Repository Service (DRS), and an event
                        that occurs under the auspices of the NRS (Name Resolution Service):</p>
                    <p><table cols="1">
                            <head>Example 1: Identifying an Object</head>
                            <row>
                                <cell>ObjectIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1">ObjectIdentifierType: NRS</cell>
                            </row>
                            <row>
                                <cell n="1">ObjectIdentifierValue: http://nrs.harvard.edu/urn-3:FHCL.Loeb:sa1</cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                    </table>
                    </p>
                    <p><table cols="1">
                            <head>Example 2: Identifying an Event</head>
                            <row>
                                <cell>EventIdentifier</cell>
                            </row>
                            <row>
                                <cell n="1"> EventIdentifierType: NRS</cell>
                            </row>
                            <row>
                                <cell n="1">EventIdentifierValue: 716593</cell>
                            </row>
                            <row>
                                <cell> </cell>
                            </row>
                    </table>
                    </p>
                    <p>In both examples, the identifier type is “NRS”, which indicates that the
                        identifier is unique within the domain of the Name Resolution Service that
                        assigns identifiers for the Digital Repository Service. Identifier type
                        should be defined as specifically as possible, and provide sufficient
                        information to indicate the relevant naming authority, as well as how to
                        build the identifier value. For example, it would have been permissible to
                        use “URL” for <italic>objectIdentifierType</italic> in the first example,
                        since the identifier value is unique in that domain, but “NRS” conveys more
                        information about the domain in which the identifier is created and
                        used.</p>
                    <p>If all identifiers are local to the repository system, it is unlikely that
                        the identifier type would need to be explicitly recorded for each identifier
                        in the system. This is an example of a semantic unit whose information is
                        known implicitly by context or policy, and is therefore not implemented as a
                        metadata element in the preservation system. However, if the repository
                        exchanges digital objects and their associated metadata with other
                        repositories, the identifier type should be supplied explicitly.</p>
                    <p>Identifiers can be created internally or externally to the repository. The
                        PREMIS Data Dictionary does not require or even recommend a specific
                        identifier scheme; this is an implementation-specific issue and is therefore
                        outside the scope of the Data Dictionary. The Data Dictionary simply
                        provides a general syntax that can be used to express identifier type and
                        value, regardless of the specific scheme chosen. It is recommended, however,
                        that repositories choose persistent identification schemes wherever
                        possible.</p>
                    <p>Identifiers are repeatable for Objects and Agents; they are not repeatable
                        for Rights and Events. Objects and Agents often have multiple identities in
                        a global environment, and across systems, and therefore are likely to have
                        multiple identifiers. Rights and Events are considered to have a context
                        limited to a particular preservation repository, and therefore do not
                        require multiple identifiers.</p>
                    <p>Identifiers are used as references to establish relationships between
                        entities in the PREMIS data model. Relationships are discussed in the next
                        section.</p>
                </div>
                <div>
                    <head>Relationships between Objects</head>
                    <p>As noted earlier, an Object in a repository can be related to one or more
                        other Objects in the repository. The PREMIS Data Dictionary supplies
                        semantic units to support documentation of relationships between Objects. A
                        wide range of metadata facts are expressed as relationships—for example, “is
                        migrated from,” “is keyed text of,” “is thumbnail of.” In some cases these
                        relationship statements combine more than one fact (e.g., “is keyed text of”
                        combines “is a keyed text” and “is derived from”) and many existing metadata
                        frameworks specify relationship types, such as the Dublin Core Relation
                        element (IsPartOf, IsFormatOf, IsVersionOf, etc. <note n="15">The Dublin
                            Core Metadata Element Set, DCMI Terms, <ref
                                target="http://www.dublincore.org/documents/dcmi-terms">
                                http://www.dublincore.org/documents/dcmi-terms</ref>.</note>). Most
                        relationships among content Objects appear to be variants of two basic
                        types: structural and derivation relationships. Dependency relationships are
                        primarily used to help express relationships between environment
                        Objects.</p>
                    <p><bold>Structural relationships</bold> show relationships between parts of
                        Objects. The structural relationships between the files that constitute a
                        representation of an Intellectual Entity are clearly essential preservation
                        metadata. If a preservation repository can’t put the pieces of a digital
                        object back together, it hasn’t preserved the object. For a simple digital
                        object (e.g., aphotograph) structural information is minimal: the file
                        constitutes the representation. Other digital objects such as e-books and
                        web sites can have quite complex structural relationships.</p>
                    <p><bold>Derivation relationships</bold> result from the replication or
                        transformation of an Object. The intellectual content of the resulting
                        Object is the same, but the Object’s instantiation, and possibly its format,
                        are different. When file A of format X is migrated to create file B of
                        format Y, a derivation relationship exists between A and B.</p>
                    <p>Many digital objects are complex, and both structural and derivation
                        information can change over time as a result of preservation activities. For
                        example, a digitized book represented by 400 TIFF page images might after
                        migration become four PDF files each containing 100 pages.</p>
                    <p>A structural relationship among objects can be established by an act of
                        derivation before the objects were ingested by the repository. For example,
                        a word-processing document could have been used to create derivative files
                        in PDF and XML formats. If only the PDF and XML files are submitted to the
                        preservation repository, these objects are different representations of the
                        same Intellectual Entity with parent-child relationships to the source
                        word-processing file. They do not have derivation relationships with each
                        other, but do have a structural relationship as siblings (children of a
                        common parent).</p>
                    <p>There is no one way to model all possible structural or derivation
                        information. Essential information that must be captured is described in the
                        semantic components of the semantic unit <italic>relationship</italic>.
                        Structural and derivative relationships link Objects; the Objects must be
                        identified, the type of relationship must be identified in some way (e.g.,
                        “is child of”) and the relationship may be associated with an event that
                        created that relationship. Implementers will likely choose approaches that
                        best suit the content to be preserved by using, for example, the METS
                        structMap or descriptive metadata schemes that define relationship types
                        (e.g. Dublin Core<note n="16">The Dublin Core Metadata Element Set, <ref
                                target="http://www.dublincore.org/documents/dces/">
                                http://www.dublincore.org/documents/dces/</ref>.</note>).</p>
                    <p>A more detailed set of relationships need to be expressed when environment
                        Objects are involved. For example, a <bold>dependency relationship</bold>
                        exists when an Object requires an environment Object to support its
                        function, delivery, the coherence of its content, or it may require specific
                        software or hardware. Similarly, an environment Object may depend on other
                        environment Objects. Figure 4 depicts a dependency relationship between a
                        .txt content Object and a Libre Office software environment Object. It also
                        shows a dependency between the Libre Office software environment Object and
                        a Java Runtime environment Object. In this way requirements for hardware and
                        software are brought together with requirements for dependent files to form
                        a complete picture of the information or assets required for the rendering
                        and/or understanding the Object. Suggested types of relationships involving
                        environment Objects are <bold>structural</bold>, <bold>derivation</bold>,
                            <bold>replacement</bold>, <bold>dependency</bold>, and
                            <bold>reference</bold>. Suggested subtypes are:</p>
                    <list type="bulleted">
                        <item>includes</item>
                        <item>is included in (structural) </item>
                        <item>represents</item>
                        <item>is represented as (structural)</item>
                        <item>supersedes (replacement)</item>
                        <item>is superseded by</item>
                        <item>requires</item>
                        <item>is derived from </item>
                        <item>is source of</item>
                        <item>is required by (dependency)</item>
                        <item>is deployed on (dependency)</item>
                        <item>documents</item>
                        <item>is documented in</item>
                    </list>
                    <figure>
                        <graphic url="PREMIS_Figure4.png"/>
                        <figDesc>Figure 4. Dependency relationships between (a) a content and environment
                            Object and (b) between two environment Objects.</figDesc>
                    </figure>
                </div>
                <div>
                    <head>Relationships between Entities of different types</head>
                    <p>The data model diagram uses arrows to show relationships between entities of
                        different types. Objects are related to Events, Agents are related to
                        Events, etc. The Data Dictionary expresses relationships as linking
                        information by including in the information for entity A, a pointer to the
                        related entity B. Every entity in the data model has a unique identifier,
                        which can be used in a pointer. So, for example, the Object entity has
                        arrows pointing to Rights and Events. These are implemented in the Data
                        Dictionary by the semantic units
                            <italic>linkingRightsStatementIdentifier</italic> and
                            <italic>linkingEventIdentifier</italic>.</p>
                </div>
                <div>
                    <head>The 1:1 principle</head>
                    <p>In digital preservation it is common practice to create new copies or
                        representations of objects. For example, in format migration file A in
                        format X may be input to a program which outputs file B in format Y. There
                        are two ways to think about files A and B. One might think of them as a
                        single Object, the history of which includes the transformation from X to Y,
                        or one could think of them as two distinct Objects with a relationship
                        created by the transformation event.</p>
                    <p>The 1:1 principle in metadata asserts that each description describes one and
                        only one resource. As applied to PREMIS metadata, files, bitstreams and
                        representations held within the preservation repository are described as a
                        static set of bits. It is not possible to change a file (or bitstream or
                        representation); one can only create a new file (or bitstream or
                        representation) that is related to the source Object. In the example above,
                        therefore, files A and B are distinct Objects with a derivative relationship
                        between them. Similarly, the 1:1 rule applies to Intellectual Entities, in
                        that an Intellectual Entity should not be reinterpreted to stand for a
                        different entity. While it is possible to change the description of an
                        Intellectual Entity without changing its identity, a new Intellectual Entity
                        must be created if a change would result in a different intellectual
                        interpretation. For example, the identity of an Intellectual Entity is not
                        changed if new structural links to other Intellectual Entities are created
                        or if an additional physical representation is created for it. The identity
                        of an Intellectual Entity would be changed if the unit of content comprising
                        the Intellectual Entity were to change significantly; for example, the
                        coverage of a collection, or different revisions of an article that do not
                        have the same status nor intellectual content and should result in different
                        Intellectual Entities.</p>
                    <p>The Data Dictionary has a semantic unit for the creation date of an Object
                            (<italic>dateCreatedByApplication</italic>) but not for the modification
                        date of an Object, because an Object, by definition, cannot be modified.</p>
                    <p>When new objects are derived from existing objects the event that created the
                        new object should be recorded as an Event, which will have a date/time
                        stamp. The relationship(s) among the objects should be recorded using the
                        relationshipsemantic unit associated with the Object entity. The semantic
                        component <italic>relatedEventIdentifier</italic> should be used to make the
                        association with the Event.</p>
                </div>
                <div>
                    <head>Implementation Considerations</head>
                </div>
                <div>
                    <head>PREMIS conformance</head>
                    <p>The PREMIS Data Dictionary was designed to be as flexible as possible in its
                        implementation. No assumptions were made regarding the nature of the digital
                        preservation system in which the Data Dictionary would be implemented, the
                        preservation strategy being followed, or even the metadata management
                        processes responsible for creating and maintaining preservation metadata.
                        The “technical neutrality” built into the design of the Data Dictionary is
                        intended to maximize the Dictionary’s applicability across the broad range
                        of digital preservation contexts in which it could potentially be
                        implemented.</p>
                    <p>Technical neutrality does not, however, override the need to establish a set
                        of principles for implementing the Data Dictionary in ways that ensure data
                        consistency within and across preservation repositories. Such consistency is
                        necessary in order to support a variety of use cases, including:</p>
                    <list type="bulleted">
                        <item>Inter-repository data exchange</item>
                        <item>Repository certification</item>
                        <item>Shared registries</item>
                        <item>Automation/reusable tools</item>
                        <item>Vendor support</item>
                    </list>
                    <p>To support these and other use cases, the PREMIS Editorial Committee released
                        a Conformance Statement in 2010<note n="17">PREMIS Editorial Committee,
                            Conformance Implementation of the PREMIS Data Dictionary, October2010,
                                <ref
                                target="http://www.loc.gov/standards/premis/premis-conformance-oct2010.pdf"
                                >
                                http://www.loc.gov/standards/premis/premis-conformance-oct2010.pdf</ref>.</note>
                        This defined a set of principles “governing a conformant implementation” of
                        the Data Dictionary. A key tenet of the work was to give implementers of the
                        Data Dictionary flexibility to be able to use the Dictionary in ways that
                        allowed them to respond to their own internal preservation processes.</p>
                    <p>Because experience of digital preservation practices and implementing PREMIS
                        has grown across the community since the original Conformance Statement was
                        drafted, in 2014 the Editorial Committee asked a sub-committee to explore
                        again the notion of conformance. This resulted in a new Conformance
                        Statement, issued in April 2015, which builds on the original Statement
                        while introducing new principles designed to assist implementers to quantify
                        the degree to which PREMIS has been implemented by a repository.<note n="18"
                                ><ref
                                target="http://www.loc.gov/standards/premis/premis-conformance-20150429.pdf"
                                >http://www.loc.gov/standards/premis/premis-conformance-20150429.pdf</ref></note>
                        The new Statement accomplishes this by introducing graduated levels of
                        conformance, which draw a distinction between metadata that can be mapped to
                        the PREMIS Data Dictionary, metadata which can be exported as PREMIS, and
                        metadata which are natively conformant to the Data Dictionary without any
                        further mapping or conversion. The levels of conformance are further refined
                        by whether a repository implements the Object entity only (considered a
                        minimum requirement for any assertion of conformance) or whether the Events
                        and Agents entities are also implemented.</p>
                    <p>Unlike the original Statement, the new version does not explicitly address
                        the concepts of internal and external conformance (i.e. internal use within
                        a repository versus interchange with other repositories); however, as a
                        repository progresses to levels two and three of conformance, the greater
                        its ability to exchange preservation metadata with other repositories. It is
                        important to note that adherence to the conformance principles is not a
                        formal requirement for implementing the PREMIS Data Dictionary (although the
                        Editorial Committee does believe that following these principles would be
                        good practice in nearly all implementation contexts). In other words, a
                        repository is free to implement the Data Dictionary in whatever way it
                        chooses in situations where conformance is not asserted. However, in
                        situations where PREMIS conformance is asserted, implementers must be able
                        to demonstrate the level with which they purport to comply.</p>
                    <p>The revised Statement adds new content on the subject of controlled
                        vocabularies, addressing in particular the vocabulary for the
                            <italic>eventType</italic> semantic unit. The Statement requires that,
                        for higher levels of conformance, a repository must record “sufficient Event
                        metadata to document actions the repository has taken to preserve the
                        digital objects.” The PREMIS Editorial Committee recognizes that it cannot
                        prescribe what actions a repository must take to preserve digital objects.
                        However, the case can be made that using consistent terms for those actions
                        is essential to building a body of understanding of what constitutes core
                        preservation functions and how to describe them, beyond the basic,
                        high-level functional areas (ingest, data management, archival storage,
                        administration, access and preservation planning) defined in the OAIS
                        functional model. The Conformance Statement therefore makes an explicit
                        connection between PREMIS conformance, the identification of core
                        preservation functions and the use of accepted terms to describe those
                        functions.</p>
                    <p>The revised conformance statement is available at: <ref
                            target="http://www.loc.gov/standards/premis/premis-conformance-20150429.pdf"
                            >http://www.loc.gov/standards/premis/premis-conformance-20150429.pdf</ref>.</p>
                </div>
                <div>
                    <head>Implementation of the data model</head>
                    <p>The PREMIS data model is meant to clarify the meaning and use of the semantic
                        units in the Data Dictionary. It is not intended to prescribe an
                        architecture for implementation.</p>
                    <p>The working group believed that most preservation repositories will need to
                        deal in some way with the conceptual entities Objects, Agents, Events, and
                        Rights, and found it useful to distinguish between the properties of
                        categories of Objects, such as Intellectual Entities, Representations, Files
                        and Bitstreams. A particular repository implementation, however, may need to
                        be more or less granular or define different categories of entity
                        altogether. PREMIS recommends that any data model used be clearly defined
                        and documented, and that metadata decisions be consistent with the data
                        model.</p>

                    <p>Sets of semantic units may be grouped and related indirectly to particular
                        entities. For example, Objects may be linked to their environment Objects
                        using the semantic container "<italic>relationship</italic>" with
                            <italic>relationshipType</italic>="dependency" and
                            <italic>relationshipSubType</italic>="requires" specifying the
                            <italic>relatedObjectIdentifier</italic> of the environment. Logically,
                        each file has one or more associated environments. This could be handled in
                        many different ways by different implementations. For example:</p>
                    <list type="bulleted">
                        <item>Repository 1 uses a relational database system. It has a "file” table
                            with a row for each file object, and an "environment" table with a row
                            for each unique environment object. The “file” table can be joined with
                            the “environment” table to get the appropriate environment information
                            for each file.</item>
                        <item>Repository 2 models representations as containers and files as objects
                            within those containers. Each Object consists of a set of property/typed
                            value pairs. Properties define roles for values. Property and type
                            descriptions are themselves objects whose identifiers are drawn from the
                            same namespace as other object identifiers. A file object may include an
                            environment property which in turn would point to an environment object.
                            This property could be a shortcut for the PREMIS defined relationship
                            link to required environments.</item>
                    </list>
                    <p>In many cases the environment is determined by the file format; that is, all
                        files of a particular format will have the same environment information.</p>
                    <list type="bulleted">
                        <item>Repository 3 uses an externally-maintained registry to obtain
                            environment information. It maintains an internal inventory of file
                            formats and their access keys for the external registry. Environment
                            information is accessed via a web services interface to the external
                            registry and obtained dynamically when needed.</item>
                    </list>
                </div>
                <div>
                    <head>Storing metadata</head>
                    <p>Most commonly, metadata is stored in relational database tables, as XML
                        documents in an XML database, as RDF datasets in an RDF triple store, or as
                        XML documents stored with the content data files. Other methods include
                        proprietary flat file formats and object-oriented databases. Many
                        repositories use two or more of these methods. Storing metadata elements in
                        a database system has the advantages of fast access, easy update, and ease
                        of use for query and reporting. Storing metadata records as digital objects
                        in repository storage along with the digital objects the metadata describes
                        also has advantages: it is harder to separate the metadata from the content,
                        and the same preservation strategies that are applied to the content can be
                        applied to the metadata. Recommended practice is to store critical metadata
                        in both ways.</p>
                    <p>Compound objects require structural metadata to describe the internal
                        structure of the objects and the relationships between their parts. In the
                        PREMIS Data Dictionary, semantic units that begin with “related” and
                        “linking” can be used to express certain simple structural information. In
                        some cases this will be adequate for the use of the Object, and in other
                        cases it will not be. Often the presentation, navigation and/or processing
                        of an Object will require rich structural metadata recorded according to
                        some other standard, such as METS, MPEG-21<note n="19">Information
                            technology – Multimedia framework (MPEG-21), ISO/IEC 21000 (multiple
                            parts), International Organization for Standardization.</note> or
                            SMIL<note n="20">Synchronized Multimedia Integration Language (SMIL),
                                <ref target="http://www.w3.org/TR/REC-smil/">
                                http://www.w3.org/TR/REC-smil/</ref>.</note>. In this case the file
                        containing the structural metadata would be a File Object to be preserved in
                        its own right. Regardless of whether a file of independent structural
                        metadata exists as part of the representation, when an archived
                        representation is exported to another repository, the metadata linking files
                        and representations should be provided. </p>
                </div>
                <div xml:id="SupplyingMetadataValues">
                    <head>Supplying metadata values</head>
                    <p>Most preservation repositories will deal with large quantities of materials,
                        so it is desirable to automate the creation and use of metadata as much as
                        possible. The values of many PREMIS semantic units can be obtained by
                        parsing files programmatically, or can be supplied as constants by
                        repository ingest programs. In cases where human intervention might be
                        unavoidable, PREMIS tends to pair a semantic unit requiring a coded value
                        with a second semantic unit allowing a textual explanation.</p>
                    <p>When information is supplied by the individual or organization submitting the
                        objects to the repository, recommended practice is for the repository to
                        attempt to verify this information by program whenever possible. For
                        example, if a file name includes a file extension, the repository should not
                        assume the file extension necessarily indicates the format and should
                        attempt to verify the format of the file before recording this as
                        metadata.</p>
                    <p>To facilitate automatic processing, the use of controlled vocabularies is
                        recommended for a number of PREMIS semantic units. PREMIS assumes that
                        repositories will adopt or define controlled vocabularies useful to them.
                        The Data Dictionary indicates where best practice would require use of a
                        controlled vocabulary. It does not require specific controlled vocabularies,
                        although in the current version it shows some examples of usage (In previous
                        versions it indicated suggested values.) </p>
                    <p>The PREMIS Editorial Committee concluded that implementers should be able to
                        choose the vocabulary and specify which vocabulary is used. Whether and how
                        to validate that the appropriate values have been used is an implementation
                        consideration. Since version 2.0 of the PREMIS Data Dictionary, the PREMIS
                        Maintenance Activity at the Library of Congress has established a web
                        service for lists of controlled values to be used with many of the PREMIS
                        semantic units that recommend use of a controlled vocabulary and were
                        considered lists that could be broadly applicable (as opposed to those that
                        were by definition local vocabularies). These are available at the Library
                        of Congress Linked Data Service for Authorities and Vocabularies (<ref
                            target="http://id.loc.gov/vocabulary/preservation"
                            >http://id.loc.gov/vocabulary/preservation</ref>). New terms and new
                        vocabularies will be added as they are requested. Repositories may use these
                        or define their own, but it should be clear what the source of each
                        controlled vocabulary is when exporting metadata for exchange.
                        Interoperability is enhanced if common vocabularies are used and
                        declared.</p>
                    <p>An implementer may choose to document controlled vocabularies used in its
                        repository so that exchange partners will know what to expect as values in
                        the metadata. For instance, METS users may specify controlled vocabularies
                        used in metadata in a METS profile, or PREMIS profiles may be established to
                        document the same. In the PREMIS XML schema version 2.3 a mechanism was
                        added for the convenience of users to allow for the specification of the
                        vocabulary used, either in the form of a string or a URI. Values may also be
                        expressed as a URI. The following information may be given in relation to a
                        PREMIS semantic unit that uses a controlled vocabulary and is documented in
                        the PREMIS XML schema:</p>
                    <list type="bulleted">
                        <item>Authority: The controlled vocabulary from which the value is taken, in
                            string form.</item>
                        <item>Authority URI: The controlled vocabulary from which the value is
                            taken, identified by a unique URI.</item>
                        <item>Value URI: The value from the controlled vocabulary, identified by a
                            unique URI.</item>
                    </list>
                    <p>Where controlled vocabularies are recommended under a data constraint, these
                        attributes may be used to indicate the vocabulary, and the value URI may
                        indicate the controlled term in the form of a URI. In this version of the
                        Data Dictionary a specific source vocabulary from <ref
                            target="http://id.loc.gov/vocabulary/preservation"
                            >http://id.loc.gov/vocabulary/preservation</ref> is referenced in each
                        semantic unit for which this is applicable, but implementers may choose
                        other vocabularies or implementations.</p>
                    <p>In Resource Description Framework (RDF), use of resource URIs as property
                        values is encouraged<note n="21">Resource Description Framework (RDF), <ref
                                target="http://www.w3.org/RDF/"
                        >http://www.w3.org/RDF/</ref>.</note>, and many XML Schemas require
                        attribute values to be URIs.<note n="22">For example, in the XML-Signature
                            Syntax and Processing(XMLDsig), the value of the signature method
                            algorithm must be a URI, such as <ref
                                target="http://www.w3.org/2000/09/xmldsig#dsa-sha1">
                                http://www.w3.org/2000/09/xmldsig#dsa-sha1</ref></note></p>
                    <p>In general, resource URIs are allowable as values for semantic units in the
                        PREMIS Data Dictionary, unless some noted constraint would disallow this
                        (e.g. date or integer datatype constraint). Whatever the technology used to
                        identify, document and maintain values within the repository, the repository
                        should be able to supply the controlled values in some way. Therefore, most
                        examples in the Data Dictionary are plain text values rather than resource
                        URIs. For example, the equivalent of a “migration” value for an eventType
                        semantic unit might be:</p>
                    <list type="bulleted">
                        <item>“Migration,” which is an implementation-agnostic constant whose
                            meaning and/or documentation is known to the repository through some
                            table or other documentation under the control of the repository
                            organization. </item>
                        <item>A locally-defined and maintained URI (e.g.
                            http://example.org/events/migration), or an external one whose
                            maintainer is trusted by the repository (in the former case: <ref
                                target="http://id.loc.gov/vocabulary/preservation/eventType/mig"
                                >http://id.loc.gov/vocabulary/preservation/eventType/mig</ref>).</item>
                    </list>
                    <p>Which of the above to choose is an implementation decision.<note n="23">
                            However, it is strongly recommended to use URIs for values when using
                            the OWL ontology to express PREMIS.</note></p>
                </div>
                <div>
                    <head>Extensibility</head>
                    <p>For several semantic units the Data Dictionary notes the potential for
                        extensibility, to allow implementations to include additional local metadata
                        or to provide additional structure or granularity of metadata, if required.
                        The inclusion of such additional metadata is relatively simple for
                        implementations using relational databases; however, a mechanism for
                        including such metadata when using the PREMIS schemas was not available in
                        the first release of the Data Dictionary and schemas. Version 2.0 of the
                        Data Dictionary introduced a formal mechanism for extensibility within the
                        schemas for a small number of semantic units which were deemed prime
                        candidates for extension. Version 3.0 has added the following extensible
                        semantic units: eventDetailInformation and environmentDesignation. Later
                        revisions of the Data Dictionary may add to this initial set of extensible
                        semantic units if warranted.</p>
                    <p>The semantic units for which extensibility is supported in the schemas
                        are:</p>
                    <list type="bulleted">
                        <item>significantProperties [Object entity]</item>
                        <item>objectCharacteristics [Object entity]</item>
                        <item>creatingApplication [within objectCharacteristics, Object
                            entity]</item>
                        <item>environmentDesignation [within Environment, Object entity]</item>
                        <item>environment [within Object entity]</item>
                        <item>signatureInformation [Object entity]</item>
                        <item>eventDetailInformation [Event entity]</item>
                        <item>eventOutcomeDetail [within eventOutcomeInformation, Event
                            entity]</item>
                        <item>rights [Rights entity]</item>
                        <item>agent [Agent entity]</item>
                    </list>
                    <p>These semantic units may be extended by use of an extension container within
                        the Data Dictionary and schemas. Within the Data Dictionary, a corresponding
                        semantic unit is indicated within the defined semantic components for each
                        of the semantic units listed above as an extensible container with
                            <italic>extension</italic> added to the name of the container that it
                        extends. An extension may contain metadata encoded according to an external
                        schema.</p>
                    <p>In devising the mechanism for extensibility, the PREMIS Editorial Committee
                        adopted the rinciple that only semantic units which are containers may be
                        extended. This would enable the use of a PREMIS defined semantic unit and/or
                        a container for semantic units defined outside of PREMIS. This required some
                        structural change (i.e. the addition of a container). For example the
                        semantic unit <italic>eventDetail</italic> underwent such change with the
                        creation of a container <italic>eventOutcomeDetail</italic>.</p>
                    <p>In utilizing the extensibility mechanism with the listed extensible semantic
                        units, the following principles should be observed:</p>
                    <list type="bulleted">
                        <item>An <bold>extension</bold> container may be used to supplement PREMIS
                            semantic units with additional metadata or replace PREMIS semantic units
                            with other applicable metadata within the parent container. The one
                            exception is <italic>objectCharacteristicsExtension</italic>, which may
                            only supplement <italic>objectCharacteristics</italic>.</item>
                        <item>Where there is a one-to-one mapping between the contents of an
                                <bold>extension</bold> container and an existing PREMIS semantic
                            unit, recommended best practice would be to use the PREMIS semantic unit
                            rather than its equivalent in the extension; however, implementers may
                            choose to use the extension alone, if circumstances warrant.</item>
                        <item>If any semantic unit is not used it should be omitted, rather than an
                            empty schema element included.</item>
                        <item>If the information in an <bold>extension</bold> container needs to be
                            associated explicitly with a PREMIS subunit, the parent container should
                            be repeated and contain the appropriate subunit and the extension
                            container. Also, if extensions from different external schemas are
                            needed, the parent container should be repeated. In this case the
                            repeated parent container may include the extension container with or
                            without any other existing PREMIS semantic units for that parent
                            container.</item>
                        <item>When an <bold>extension</bold> container is used, the external schema
                            being used within that extension container must be declared.</item>
                    </list>
                    <p>Additional information may be given about the extension metadata and is
                        provided for in the PREMIS XML schema. This includes:</p>
                    <list type="bulleted">
                        <item>Date the metadata was created</item>
                        <item>Status of the metadata</item>
                        <item>Internal IDs to provide links</item>
                        <item>Type of metadata (i.e. the metadata scheme) and version</item>
                        <item>Message digest and message digest algorithm of the metadata</item>
                        <item>Type of location identifier when reference is to external metadata
                        </item>
                    </list>
                    <p>Please note that extension containers were dropped in the PREMIS OWL
                        ontology, as combining different vocabularies in the same description is a
                        built-in capability of RDF.</p>
                </div>
                <div>
                    <head>Date and time formats in PREMIS</head>
                    <p>All semantic units that specify the use of a date or a date and a time
                        suggest the use of a structured form to aid machine processing. In keeping
                        with its being implementation independent, the Data Dictionary does not
                        specify a particular standard to be used. In some cases, conventions are
                        needed to express other aspects of a time period, such as an open-ended or
                        questionable date. The PREMIS XML schema specifies date and time formats and
                        establishes such conventions; it is recommended that these be used when
                        needed. The following are semantic units that may include a date or date and
                        time:</p>
                    <list type="bulleted">
                        <item>preservationLevelDateAssigned (under preservationLevel)</item>
                        <item>dateCreatedByApplication (under creatingApplication)</item>
                        <item>eventDateTime (under Event)</item>
                        <item>copyrightStatusDeterminationDate (under copyrightInformation)</item>
                        <item>statuteInformationDeterminationDate (under statuteInformation)</item>
                        <item>startDate (under statuteApplicableDates, copyrightApplicableDates,
                            otherRightsApplicableDates, termOfGrant, and termOfRestriction)</item>
                        <item>endDate (under statuteApplicableDates, copyrightApplicableDates,
                            otherRightsApplicableDates, termOfGrant, and termOfRestriction)</item>
                    </list>
                </div>
                <div>
                    <head>THE PREMIS DATA DICTIONARY VERSION 3.0</head>
                    <p>The PREMIS Data Dictionary includes semantic units for Objects, Events,
                        Agents, and Rights. The template for each entry includes a place for notes
                        about how to create or use the semantic unit. In some cases the group felt
                        additional information, such as the reason for a semantic unit’s definition
                        or issues that arose in the group’s deliberations, would be useful; for
                        these details, see section <!-- TODO: internal referencing --> “Special Topics”.
                    </p>
                    <p>A semantic component always inherits the applicability of the containing
                        semantic unit. That is, if the containing semantic unit specifies that it is
                        applicable to files but not to representations, each of its semantic
                        components is applicable to files and not to representations. Repeatability
                        and obligation, however, may vary.</p>
                    <p>Each entry in the Data Dictionary offers these attributes of a semantic
                        unit:</p>

                    <p><bold>Name of the semantic unit</bold>: Names were devised to be descriptive
                        and unique within the Data Dictionary. Using these names for the exchange of
                        metadata among preservation repositories will aid interoperability. These
                        names need not be used internally within any individual preservation
                        repository.</p>
                    <p><bold>Semantic components:</bold> The semantic components each have their own
                        entries later in the Data Dictionary. A semantic unit that has semantic
                        components does not have any value of its own. Only semantic units at the
                        lowest level have values.</p>
                    <p><bold>Definition:</bold> The meaning of the semantic unit.</p>
                    <p><bold>Rationale:</bold>Why the semantic unit is needed, if this is not
                        self-evident from the definition.</p>
                    <p><bold>Data constraint:</bold>How the value of the semantic unit should be
                        encoded. Some common data constraints are: <list type="simple">
                            <item><italic>Container</italic> – The semantic unit is an umbrella for
                                two or more semantic components and has no value of its own.</item>
                            <item><italic>None</italic> – The semantic unit can take any form of
                                value.</item>
                            <item><italic>Value should be taken from a controlled
                                    vocabulary</italic> – The preservation repository should
                                establish an authority list of values that are useful and meaningful
                                to the repository. The PREMIS Data Dictionary does not specify what
                                this authority list should be, and it is assumed that different
                                repositories will use different vocabularies. In general, when a
                                value is taken from a controlled vocabulary, the source of the
                                vocabulary should be recorded. A mechanism to record the source is
                                provided in the PREMIS XML schemas.</item>
                        </list>
                    </p>
                    <p><bold>Object category:</bold> Whether the unit applies to an Intellectual
                        Entity, Representation, File, or Bitstream Object. Semantic units that apply
                        to Representations also apply to Intellectual Entities and semantic units
                        that apply to Files also apply to Bitstreams (see section "More on Objects").
                        <!-- TODO internal referencing --></p>
                    <p><bold>Applicability:</bold> A scope of “applicable” means it applies to that
                        category of Object.</p>
                    <p><bold>Examples:</bold> One or more examples of values the semantic unit may
                        take. Examples are intended to be illustrative.</p>
                    <p>An example of an actual value is set in normal text. Text in brackets
                        presents a description of the value rather than the value itself. For
                        example, “SHA-1 message digest” reflects the actual value of the semantic
                        unit, while “[SHA-1 message digest]” means the value of the semantic unit is
                        a SHA-1 message digest such as:</p>
                    <p>
                        “7c9b35da4f2ebd436f1cf88e5a39b3a257edf4a22be3c955ac49da2e2107b67a1924419563”</p>
                    <p><bold>Repeatability:</bold> A semantic unit designated as “Repeatable” can
                        take multiple values. It does not mean that a repository must record
                        multiple instances of the semantic unit.</p>
                    <p><bold>Obligation:</bold> Whether a value for the semantic unit is mandatory
                        (if applicable) or optional.</p>
                    <p>A mandatory semantic unit is something that the preservation repository needs
                        to know, independent of how or whether the repository records it. The
                        repository might not explicitly record a value for the semantic unit if it
                        is known by some other means (e.g., by the repository’s business rules).
                        “Mandatory” actually means “mandatory if applicable.” For example, an
                        identifier for a bitstream is mandatory only if the repository manages data
                        at the bitstream level. When exchanging PREMIS-conformant metadata with
                        another repository, values for mandatory semantic units must always be
                        provided.</p>
                    <p>Values for optional semantic units are encouraged but not required.</p>
                    <p>If a container unit is optional, but a semantic component within that
                        container is mandatory, the semantic component must be supplied if and only
                        if the container unit exists. That is, if a value for any of the optional or
                        mandatory semantic units in the container is supplied, a value for all of
                        the mandatory semantic units in the container must be supplied.</p>
                    <p><bold>Creation/Maintenance notes:</bold> Notes about how the values for the
                        semantic unit may be obtained and/or updated.</p>
                    <p><bold>Usage notes:</bold> Information about the intended use of the semantic
                        unit, or clarification of the definition.</p>


                </div>

                <div>
                    <head>Limits to the scope of the Data Dictionary</head>
                    <p><bold>Descriptive metadata: </bold>Typically, descriptive metadata is used to
                        describe Intellectual Entities. Nearly all preservation repositories either
                        include descriptive metadata or link to descriptive metadata located outside
                        the repository itself. Such metadata may identify a resource by publication
                        information such as creator and title, or may characterize its intellectual
                        content through classification, subject terms, and so on. Descriptive
                        metadata can be important both for discovery of archived resources and for
                        helping decision makers during preservation planning. However, the Data
                        Dictionary does not focus on descriptive elements for two reasons.</p>
                    <p>First, descriptive metadata is well served by existing standards. MARC<note
                            n="24">MARC 21, <ref target="http://www.loc.gov/marc/"
                                >http://www.loc.gov/marc/</ref></note>, MODS<note n="25"> Metadata
                            Object Description Schema (MODS), <ref
                                target="http://www.loc.gov/standards/mods/">
                                http://www.loc.gov/standards/mods/</ref>.</note>, the Dublin Core
                        Metadata Element Set, the Content Standard for Digital Geospatial
                            Metadata<note n="26">Content Standard for Digital Geospatial Metadata,
                            FGDC-STD-001-1998, <ref target="http://www.fgdc.gov/metadata/csdgm/"
                                >http://www.fgdc.gov/metadata/csdgm/</ref>.</note>, the VRA
                            Core<note n="27">VRA Core 4.0, <ref
                                target="http://www.vraweb.org/projects/vracore4/">
                                http://www.vraweb.org/projects/vracore4/</ref>.</note>, the Encoded
                        Archival Description (EAD)<note n="28">Encoded Archival Description (EAD),
                                <ref target="http://www.loc.gov/ead/"
                            >http://www.loc.gov/ead/</ref>.</note>, and the Data Documentation
                            Initiative<note n="29">Data Documentation Initiative (DDI), <ref
                                target="http://www.ddialliance.org/"
                                >http://www.ddialliance.org/</ref>.</note> schemas are only some of
                        the standards that define descriptive metadata elements. The working group
                        did not want to add another set of descriptive elements to an already
                        crowded field. Second, descriptive metadata is often domain specific. For
                        the purposes of preservation it is less crucial that a common set of
                        elements describe, for example, satellite telemetry and digital Picassos
                        than that communities of interest be able to capture and exchange
                        information in a form that reflects their materials and interests
                        appropriately.</p>
                    <p><bold>Agents: </bold>PREMIS does not define the characteristics of Agents in
                        any detail. Metadata describing people, organizations, and other entities
                        that can act as Agents has been defined in many existing formats and
                        standards, such as MARC, vCard<note n="30">vCard, <ref
                                target="http://www.imc.org/pdi/"
                            >http://www.imc.org/pdi/</ref>.</note> MADS<note n="31">Metadata
                            Authority Description Schema (MADS), <ref
                                target="http://www.loc.gov/standards/mads/">
                                http://www.loc.gov/standards/mads/</ref>.</note>, and several other
                        schemes currently under development. As long as a preservation repository
                        can properly identify Agents that have acted upon Objects in its care,
                        additional Agent characteristics will be determined by local requirements;
                        many can be modeled on existing standard metadata element sets.</p>
                    <p><bold>Rights: </bold>PREMIS primarily defines characteristics of Rights and
                        permissions concerned with preservation activities, not those associated
                        with access and/or distribution. The semantic units allow for extensibility
                        to use an external Rights metadata scheme.</p>
                    <p><bold>Technical metadata: </bold>Technical metadata describes the physical
                        rather than intellectual characteristics of digital objects. Detailed,
                        format-specific technical metadata is clearly necessary for implementing
                        most preservation strategies, but the group had neither the time nor the
                        expertise to tackle format-specific technical metadata for various types of
                        digital files. Therefore, it restricted the technical metadata included in
                        the Data Dictionary to the semantic units it believed apply to objects in
                        all formats. Further development of technical metadata is left to format
                        experts. An extensibility mechanism is provided by including the semantic
                        unit <italic>objectCharacteristicsExtension</italic>, which may be used with
                        an external technical metadata scheme.</p>
                    <p><bold>Media details: </bold>The working group did not attempt to define
                        metadata for detailed documentation of media. For example, PREMIS defines a
                        semantic unit for identifying the medium on which an object is stored. A
                        preservation repository will probably want to know more detailed information
                        about the media employed. If the repository stores data on DVDs, for
                        example, it may need to know the specific technical characteristics of the
                        specific DVD units, such as manufacturer, dye material, and dye thickness.
                        PREMIS leaves the definition of metadata for describing media
                        characteristics to specialists in these areas.</p>
                    <p><bold>Business rules: </bold>The working group made no attempt to describe
                        the business rules of a repository, although certainly this metadata is
                        essential for preservation within the repository. Business rules codify the
                        application of preservation strategies and document repository policies,
                        services, charges, and roles. Retention periods, disposition, risk
                        assessment, permanence ratings, schedules for media refreshment, and so on
                        are pertinent to objects but are not actual properties of Objects. A single
                        exception was made for the level of preservation treatment to be accorded an
                        object (preservationLevel) because this was felt to be critical information
                        for any preservation repository. A more thorough treatment of business rules
                        could be added to the data model by defining a Rules entity similar to
                        Rights, although this is not included in the current revision.</p>
                </div>
            </div>
        </front>
        <body>
            <div type="elements" xml:id="objects">
                <div type="Introduction">
                    <head>Object Entity</head>
                    <p>The Object entity aggregates information about a digital object held by a
                        preservation repository and describes those characteristics relevant to
                        preservation management.</p>
                    <p>The only mandatory semantic units that apply to all categories of Object
                        (Intellectual Entity, Representation, File, and Bitstream) are
                            <italic>objectIdentifier</italic> and
                        <italic>objectCategory</italic>.</p>

                    <p>
                        <list type="gloss">
                            <head>Entity types:</head>
                            <label>Intellectual Entity</label>
                            <item>A set of content that is considered a single intellectual unit for
                                purposes of management and description: for example, a particular
                                book, map, photograph, database, or piece of hardware or software.
                                An Intellectual Entity can include other Intellectual Entities; for
                                example, a web site can include a web page; a web page can include
                                an image. An Intellectual Entity may have one or more digital
                                representations.</item>
                            <label>Representation:</label>
                            <item>A digital or physical Object instantiating or embodying an
                                Intellectual Entity. A digital representation is the set of stored
                                digital files and structural metadata needed to provide a complete
                                and reasonable rendition of the Intellectual Entity. A physical
                                representation is an item such as a manuscript, video cassette, or
                                printed document.</item>
                            <label>File:</label>
                            <item>A named and ordered sequence of bytes that is known to an
                                operating system.</item>
                            <label>Bitstream:</label>
                            <item>Contiguous or non-contiguous data within a file that has
                                meaningful properties for preservation purposes.</item>
                        </list>
                    </p>
                    <p>
                        <list type="bulleted">
                            <head>Entity properties</head>
                            <item>Can be associated with one or more Rights statements.</item>
                            <item>Can participate in one or more Events.</item>
                            <item>Links between entities may be recorded from either direction and
                                need not be bi-directional.</item>
                        </list>
                    </p>
                    <p><italic>NB: Semantic units are applicable for Intellectual Entities,
                            Representations, Files and Bitstreams unless otherwise
                            indicated.</italic></p>
                    <table cols="1">
                        <head>Entity semantic units</head>
                        <row>
                            <cell>1.1 objectIdentifier (M, R)</cell>
                        </row>
                        <row>
                            <cell n="1">1.1.1 objectIdentifierType (M, NR)</cell>
                        </row>
                        <row>
                            <cell n="1">1.1.2 objectIdentifierValue (M, NR)</cell>
                        </row>
                        <row>
                            <cell>1.2 objectCategory (M, NR) </cell>
                        </row>
                        <row>
                            <cell>1.3 preservationLevel (O, R) [Intellectual Entity,
                                Representation, File] </cell>
                        </row>
                        <row>
                            <cell n="1">1.3.1 preservationLevelType (O, NR) [Intellectual Entity,
                                Representation, File] </cell>
                        </row>
                        <row>
                            <cell n="1">1.3.2 preservationLevelValue (M, NR) [Intellectual Entity,
                                Representation, File] </cell>
                        </row>
                        <row>
                            <cell n="1">1.3.3 preservationLevelRole (O, NR) [Intellectual Entity,
                                Representation, File] </cell>
                        </row>
                        <row>
                            <cell n="1">1.3.4 preservationLevelRationale (O, R) [Intellectual Entity,
                                Representation, File] </cell>
                        </row>
                        <row>
                            <cell n="1">1.3.5 preservationLevelDateAssigned (O, NR) [Intellectual Entity,
                                Representation, File] </cell>
                        </row>
                        <row>
                            <cell>1.4 significantProperties (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1">1.4.1 significantPropertiesType (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1">1.4.2 significantPropertiesValue (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1">1.4.3 significantPropertiesExtension (O, R) </cell>
                        </row>
                        <row>
                            <cell> 1.5 objectCharacteristics (M, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.5.1 compositionLevel (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.5.2 fixity (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.2.1 messageDigestAlgorithm (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.2.2 messageDigest (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.2.3 messageDigestOriginator (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.5.3 size (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.5.4 format (M, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.4.1 formatDesignation (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="3"> 1.5.4.1.1 formatName (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="3"> 1.5.4.1.2 formatVersion (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.4.2 formatRegistry (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="3"> 1.5.4.2.1 formatRegistryName (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="3"> 1.5.4.2.2 formatRegistryKey (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="3"> 1.5.4.2.3 formatRegistryRole (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.4.3 formatNote (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.5.5 creatingApplication (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.5.1 creatingApplicationName (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.5.2 creatingApplicationVersion (O, NR) [File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.5.3 dateCreatedByApplication (O, NR) [File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.5.4 creatingApplicationExtension (O, R) [File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.5.6 inhibitors (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.6.1 inhibitorType (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.6.2 inhibitorTarget (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.5.6.3 inhibitorKey (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.5.7 objectCharacteristicsExtension (O, R) [File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell> 1.6 originalName (O, NR) [Intellectual Entity, Representation,
                                File] </cell>
                        </row>
                        <row>
                            <cell> 1.7 storage (O, R) [Representation, File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.7.1 contentLocation (O, NR) [Representation, File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.7.1.1 contentLocationType (M, NR) [Representation, File,
                                Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.7.1.2 contentLocationValue (M, NR) [Representation, File,
                                Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.7.2 storageMedium (O, NR) [Representation, File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell> 1.8 signatureInformation (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.8.1 signature (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.8.1.1 signatureEncoding (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.8.1.2 signer (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.8.1.3 signatureMethod (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.8.1.4 signatureValue (M, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.8.1.5 signatureValidationRules (M, NR) [File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.8.1.6 signatureProperties (O, R) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.8.1.7 keyInformation (O, NR) [File, Bitstream] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.8.2 signatureInformationExtension (O, R) [File, Bitstream]
                            </cell>
                        </row>
                        <row>
                            <cell> 1.9 environmentFunction (O, R) [Intellectual Entity of type
                                environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.9.1 environmentFunctionType (M, NR) [Intellectual Entity of
                                type environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.9.2 environmentFunctionLevel (M, NR) [Intellectual Entity of
                                type environment] </cell>
                        </row>
                        <row>
                            <cell> 1.10 environmentDesignation (O, R) [Intellectual Entity of type
                                environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.10.1 environmentName (M, NR) [Intellectual Entity of type
                                environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.10.2 environmentVersion (O, NR) [Intellectual Entity of type
                                environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.10.3 environmentOrigin (O, NR) [Intellectual Entity of type
                                environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.10.4 environmentDesignationNote (O, R) [Intellectual Entity of
                                type environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.10.5 environmentDesignationExtension (O, R) [Intellectual
                                Entity of type environment] </cell>
                        </row>
                        <row>
                            <cell> 1.11 environmentRegistry (O, R) [Intellectual Entity of type
                                environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.11.1 environmentRegistryName (M, NR) [Intellectual Entity of
                                type environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.11.2 environmentRegistryKey (M, NR) [Intellectual Entity of
                                type environment] </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.11.3 environmentRegistryRole (O, NR) [Intellectual Entity of
                                type environment] </cell>
                        </row>
                        <row>
                            <cell> 1.12 environmentExtension (O, R) [Intellectual Entity of type
                                environment] </cell>
                        </row>
                        <row>
                            <cell> 1.13 relationship (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.13.1 relationshipType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.13.2 relationshipSubType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.13.3 relatedObjectIdentifier (M, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.13.3.1 relatedObjectIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.13.3.2 relatedObjectIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.13.3.3 relatedObjectSequence (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.13.4 relatedEventIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.13.4.1 relatedEventIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.13.4.2 relatedEventIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 1.13.4.3 relatedEventSequence (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.13.5 relatedEnvironmentPurpose (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.13.6 relatedEnvironmentCharacteristic (O, NR) </cell>
                        </row>
                        <row>
                            <cell> 1.14 linkingEventIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.14.1 linkingEventIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.14.2 linkingEventIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell> 1.15 linkingRightsStatementIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.15.1 linkingRightsStatementIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 1.15.2 linkingRightsStatementIdentifierValue (M, NR) </cell>
                        </row>


                    </table>
                </div>
                <xi:include href="su/object/objectIdentifier.xml" parse="xml"/>
                <xi:include href="su/object/objectIdentifierType.xml" parse="xml"/>
                <xi:include href="su/object/objectIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/object/objectCategory.xml" parse="xml"/>
                <xi:include href="su/object/preservationLevel.xml" parse="xml"/>
                <xi:include href="su/object/preservationLevelType.xml" parse="xml"/>
                <xi:include href="su/object/preservationLevelValue.xml" parse="xml"/>
                <xi:include href="su/object/preservationLevelRole.xml" parse="xml"/>
                <xi:include href="su/object/preservationLevelRationale.xml" parse="xml"/>
                <xi:include href="su/object/preservationLevelDateAssigned.xml" parse="xml"/>
                <xi:include href="su/object/significantProperties.xml" parse="xml"/>
                <xi:include href="su/object/significantPropertiesType.xml" parse="xml"/>
                <xi:include href="su/object/significantPropertiesValue.xml" parse="xml"/>
                <xi:include href="su/object/significantPropertiesExtension.xml" parse="xml"/>
                <xi:include href="su/object/objectCharacteristics.xml" parse="xml"/>
                <xi:include href="su/object/compositionLevel.xml" parse="xml"/>
                <xi:include href="su/object/fixity.xml" parse="xml"/>
                <xi:include href="su/object/messageDigestAlgorithm.xml" parse="xml"/>
                <xi:include href="su/object/messageDigest.xml" parse="xml"/>
                <xi:include href="su/object/messageDigestOriginator.xml" parse="xml"/>
                <xi:include href="su/object/size.xml" parse="xml"/>
                <xi:include href="su/object/format.xml" parse="xml"/>
                <xi:include href="su/object/formatDesignation.xml" parse="xml"/>
                <xi:include href="su/object/formatName.xml" parse="xml"/>
                <xi:include href="su/object/formatVersion.xml" parse="xml"/>
                <xi:include href="su/object/formatRegistry.xml" parse="xml"/>
                <xi:include href="su/object/formatRegistryName.xml" parse="xml"/>
                <xi:include href="su/object/formatRegistryKey.xml" parse="xml"/>
                <xi:include href="su/object/formatRegistryRole.xml" parse="xml"/>
                <xi:include href="su/object/formatNote.xml" parse="xml"/>
                <xi:include href="su/object/creatingApplication.xml" parse="xml"/>
                <xi:include href="su/object/creatingApplicationName.xml" parse="xml"/>
                <xi:include href="su/object/creatingApplicationVersion.xml" parse="xml"/>
                <xi:include href="su/object/dateCreatedByApplication.xml" parse="xml"/>
                <xi:include href="su/object/creatingApplicationExtension.xml" parse="xml"/>
                <xi:include href="su/object/inhibitors.xml" parse="xml"/>
                <xi:include href="su/object/inhibitorType.xml" parse="xml"/>
                <xi:include href="su/object/inhibitorTarget.xml" parse="xml"/>
                <xi:include href="su/object/inhibitorKey.xml" parse="xml"/>
                <xi:include href="su/object/objectCharacteristicsExtension.xml" parse="xml"/>
                <xi:include href="su/object/originalName.xml" parse="xml"/>
                <xi:include href="su/object/storage.xml" parse="xml"/>
                <xi:include href="su/object/contentLocation.xml" parse="xml"/>
                <xi:include href="su/object/contentLocationType.xml" parse="xml"/>
                <xi:include href="su/object/contentLocationValue.xml" parse="xml"/>
                <xi:include href="su/object/storageMedium.xml" parse="xml"/>
                <xi:include href="su/object/signatureInformation.xml" parse="xml"/>
                <xi:include href="su/object/signature.xml" parse="xml"/>
                <xi:include href="su/object/signatureEncoding.xml" parse="xml"/>
                <xi:include href="su/object/signer.xml" parse="xml"/>
                <xi:include href="su/object/signatureMethod.xml" parse="xml"/>
                <xi:include href="su/object/signatureValue.xml" parse="xml"/>
                <xi:include href="su/object/signatureValidationRules.xml" parse="xml"/>
                <xi:include href="su/object/signatureProperties.xml" parse="xml"/>
                <xi:include href="su/object/keyInformation.xml" parse="xml"/>
                <xi:include href="su/object/signatureInformationExtension.xml" parse="xml"/>
                <xi:include href="su/object/environmentFunction.xml" parse="xml"/>
                <xi:include href="su/object/environmentFunctionType.xml" parse="xml"/>
                <xi:include href="su/object/environmentFunctionLevel.xml" parse="xml"/>
                <xi:include href="su/object/environmentDesignation.xml" parse="xml"/>
                <xi:include href="su/object/environmentName.xml" parse="xml"/>
                <xi:include href="su/object/environmentVersion.xml" parse="xml"/>
                <xi:include href="su/object/environmentOrigin.xml" parse="xml"/>
                <xi:include href="su/object/environmentDesignationNote.xml" parse="xml"/>
                <xi:include href="su/object/environmentDesignationExtension.xml" parse="xml"/>
                <xi:include href="su/object/environmentRegistry.xml" parse="xml"/>
                <xi:include href="su/object/environmentRegistryName.xml" parse="xml"/>
                <xi:include href="su/object/environmentRegistryKey.xml" parse="xml"/>
                <xi:include href="su/object/environmentRegistryRole.xml" parse="xml"/>
                <xi:include href="su/object/environmentExtension.xml" parse="xml"/>
                <xi:include href="su/object/relationship.xml" parse="xml"/>
                <xi:include href="su/object/relationshipType.xml" parse="xml"/>
                <xi:include href="su/object/relationshipSubType.xml" parse="xml"/>
                <xi:include href="su/object/relatedObjectIdentifier.xml" parse="xml"/>
                <xi:include href="su/object/relatedObjectIdentifierType.xml" parse="xml"/>
                <xi:include href="su/object/relatedObjectIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/object/relatedObjectSequence.xml" parse="xml"/>
                <xi:include href="su/object/relatedEventIdentifier.xml" parse="xml"/>
                <xi:include href="su/object/relatedEventIdentifierType.xml" parse="xml"/>
                <xi:include href="su/object/relatedEventIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/object/relatedEventSequence.xml" parse="xml"/>
                <xi:include href="su/object/relatedEnvironmentPurpose.xml" parse="xml"/>
                <xi:include href="su/object/relatedEnvironmentCharacteristic.xml" parse="xml"/>
                <xi:include href="su/object/linkingEventIdentifier.xml" parse="xml"/>
                <xi:include href="su/object/linkingEventIdentifierType.xml" parse="xml"/>
                <xi:include href="su/object/linkingEventIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/object/linkingRightsStatementIdentifier.xml" parse="xml"/>
                <xi:include href="su/object/linkingRightsStatementIdentifierType.xml" parse="xml"/>
                <xi:include href="su/object/linkingRightsStatementIdentifierValue.xml" parse="xml"/>
            </div>
            <div type="elements" xml:id="events">
                <div type="Introduction">
                    <head>Event Entity</head>
                    <list type="bulleted">
                        <item>The Event entity aggregates information about an action that involves
                            one or more Object entities. Metadata about an Event would normally be
                            recorded and stored separately from the digital object.</item>
                        <item>Whether or not a preservation repository records an Event depends upon
                            the importance of the event. Actions that modify objects should always
                            be recorded. Other actions such as copying an object for backup purposes
                            may be recorded in system logs or an audit trail but not necessarily in
                            an Event entity</item>
                        <item>Mandatory semantic units are: eventIdentifier, eventType, and
                            eventDateTime.</item>
                    </list>
                    <list type="bulleted">
                        <head>Entity properties</head>
                        <item>Must be related to one or more Objects.</item>
                        <item>Can be related to one or more Agents.</item>
                        <item>Links between entities may be recorded from either direction and need
                            not be bi-directional.</item>
                    </list>
                    <table cols="1">
                        <head>Entity semantic units</head>
                        <row>
                            <cell> 2.1 eventIdentifier (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.1.1 eventIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.1.2 eventIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell> 2.2 eventType (M, NR) </cell>
                        </row>
                        <row>
                            <cell> 2.3 eventDateTime (M, NR) </cell>
                        </row>
                        <row>
                            <cell> 2.4 eventDetailInformation (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.4.1 eventDetail (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.4.2 eventDetailExtension (O, R) </cell>
                        </row>
                        <row>
                            <cell> 2.5 eventOutcomeInformation (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.5.1 eventOutcome (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.5.2 eventOutcomeDetail (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 2.5.2.1 eventOutcomeDetailNote (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 2.5.2.2 eventOutcomeDetailExtension (O, R) </cell>
                        </row>
                        <row>
                            <cell> 2.6 linkingAgentIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.6.1 linkingAgentIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.6.2 linkingAgentIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.6.3 linkingAgentRole (O, R) </cell>
                        </row>
                        <row>
                            <cell> 2.7 linkingObjectIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.7.1 linkingObjectIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.7.2 linkingObjectIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 2.7.3 linkingObjectRole (O, R) </cell>
                        </row>
                    </table>
                </div>
                <xi:include href="su/events/eventIdentifier.xml" parse="xml"/>
                <xi:include href="su/events/eventIdentifierType.xml" parse="xml"/>
                <xi:include href="su/events/eventIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/events/eventType.xml" parse="xml"/>
                <xi:include href="su/events/eventDateTime.xml" parse="xml"/>
                <xi:include href="su/events/eventDetailInformation.xml" parse="xml"/>
                <xi:include href="su/events/eventDetail.xml" parse="xml"/>
                <xi:include href="su/events/eventDetailExtension.xml" parse="xml"/>
                <xi:include href="su/events/eventOutcomeInformation.xml" parse="xml"/>
                <xi:include href="su/events/eventOutcome.xml" parse="xml"/>
                <xi:include href="su/events/eventOutcomeDetail.xml" parse="xml"/>
                <xi:include href="su/events/eventOutcomeDetailNote.xml" parse="xml"/>
                <xi:include href="su/events/eventOutcomeDetailExtension.xml" parse="xml"/>
                <xi:include href="su/events/linkingAgentIdentifier.xml" parse="xml"/>
                <xi:include href="su/events/linkingAgentIdentifierType.xml" parse="xml"/>
                <xi:include href="su/events/linkingAgentIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/events/linkingAgentRole.xml" parse="xml"/>
                <xi:include href="su/events/linkingObjectIdentifier.xml" parse="xml"/>
                <xi:include href="su/events/linkingObjectIdentifierType.xml" parse="xml"/>
                <xi:include href="su/events/linkingObjectIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/events/linkingObjectRole.xml" parse="xml"/>
            </div>
            <div type="elements" xml:id="agents">
                <div type="Introduction">
                    <head>Agent Entity</head>
                    <p>The Agent entity aggregates information about attributes or characteristics
                        of Agents (persons, organizations, or software) associated with Rights
                        management and preservation events in the life of a data object. Agent
                        information serves to identify an Agent unambiguously from all other Agent
                        entities.</p>
                    <p>A piece of software or hardware that is captured as an Agent can also be
                        preserved in a repository and described as an environment O bject, for
                        example, as source code or an ISO disk image. In this case, implementers may
                        choose to relate the Agent to the environment O bject using the
                        linkingEnvironmentIdentifier semantic unit. This relationship can support
                        the ability of a repository to record in considerable detail the
                        interactions between software or hardware Agents and the preserved digital
                        objects with which they interact, and even to reproduce these interactions
                        if desired.</p>
                    <p>The only mandatory semantic unit is agentIdentifier.</p>
                    <list type="bulleted">
                        <head>Entity properties</head>
                        <item>May hold or grant one or more Rights.</item>
                        <item>May carry out, authorize, or compel one or more Events.</item>
                        <item>May create or act upon one or more Objects through an Event or with
                            respect to a Rights statement.</item>
                    </list>
                    <table cols="1">
                        <head>Entity semantic units</head>
                        <row>
                            <cell> 3.1 agentIdentifier (M, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.1.1 agentIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.1.2 agentIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell> 3.2 agentName (O, R) </cell>
                        </row>
                        <row>
                            <cell> 3.3 agentType (O, NR) </cell>
                        </row>
                        <row>
                            <cell> 3.4 agentVersion (O, NR) </cell>
                        </row>
                        <row>
                            <cell> 3.5 agentNote (O, R) </cell>
                        </row>
                        <row>
                            <cell> 3.6 agentExtension (O, R) </cell>
                        </row>
                        <row>
                            <cell> 3.7 linkingEventIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.7.1 linkingEventIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.7.2 linkingEventIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell> 3.8 linkingRightsStatementIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.8.1 linkingRightsStatementIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.8.2 linkingRightsStatementIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell> 3.9 linkingEnvironmentIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.9.1 linkingEnvironmentIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.9.2 linkingEnvironmentIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 3.9.3 linkingEnvironmentRole (O, R) </cell>
                        </row>
                    </table>

                </div>
                <xi:include href="su/agents/agentIdentifier.xml" parse="xml"/>
                <xi:include href="su/agents/agentIdentifierType.xml" parse="xml"/>
                <xi:include href="su/agents/agentIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/agents/agentName.xml" parse="xml"/>
                <xi:include href="su/agents/agentType.xml" parse="xml"/>
                <xi:include href="su/agents/agentVersion.xml" parse="xml"/>
                <xi:include href="su/agents/agentNote.xml" parse="xml"/>
                <xi:include href="su/agents/agentExtension.xml" parse="xml"/>
                <xi:include href="su/agents/linkingEventIdentifier.xml" parse="xml"/>
                <xi:include href="su/agents/linkingEventIdentifierType.xml" parse="xml"/>
                <xi:include href="su/agents/linkingEventIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/agents/linkingRightsStatementIdentifier.xml" parse="xml"/>
                <xi:include href="su/agents/linkingRightsStatementIdentifierType.xml" parse="xml"/>
                <xi:include href="su/agents/linkingRightsStatementIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/agents/linkingEnvironmentIdentifier.xml" parse="xml"/>
                <xi:include href="su/agents/linkingEnvironmentIdentifierType.xml" parse="xml"/>
                <xi:include href="su/agents/linkingEnvironmentIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/agents/linkingEnvironmentRole.xml" parse="xml"/>
            </div>
            <div type="elements" xml:id="rights">
                <div type="Introduction">
                    <head>Rights Entity</head>
                    <p>For the purpose of the PREMIS Data Dictionary, statements of legal rights and
                        permissions are taken to be constructs that can be described as the Rights
                        entity. Rights are entitlements grantedto Agents by copyright or other
                        intellectual property law. Permissions are powers or privileges granted by
                        agreement between a rightsholder and another party or parties.</p>
                    <p>A repository might wish to record a variety of Rights information including
                        abstract Rightsstatements and statements of permissions that apply to
                        external Agents and to objects not held within the repository. The minimum
                        core Rights information that a preservation repository must know, however,
                        is what Rights or permissions a repository has to carry out actions related
                        to objects within the repository. These may generally be granted by
                        copyright law, by statute, or by a license agreement with the rightsholder.
                        In some situations the basis for the rights is for other reasons, for
                        instance institutional policy. </p>
                    <p>If the repository records Rights information, either <bold>rightsStatement</bold>
                        or <bold>rightsExtension</bold> must be present.</p>
                    <list type="bulleted">
                        <head>Entity properties</head>
                        <item>May be related to one or more Objects.</item>
                        <item>May be related to one or more Agents.</item>
                        <item>Links between entities may be recorded from either direction and need
                            not be bi-directional.</item>
                    </list>
                    <table cols="1">
                        <head>Entity semantic units</head>
                        <row>
                            <cell> 4.1 rightsStatement (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.1 rightsStatementIdentifier (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.1.1 rightsStatementIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.1.2 rightsStatementIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.2 rightsBasis (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.3 copyrightInformation (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.3.1 copyrightStatus (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.3.2 copyrightJurisdiction (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.3.3 copyrightStatusDeterminationDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.3.4 copyrightNote (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.3.5 copyrightDocumentationIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.3.5.1 copyrightDocumentationIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.3.5.2 copyrightDocumentationIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.3.5.3 copyrightDocumentationRole (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.3.6 copyrightApplicableDates (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.3.6.1 startDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.3.6.2 endDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.4 licenseInformation (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.4.1 licenseDocumentationIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.4.1.1 licenseDocumentationIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.4.1.2 licenseDocumentationIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.4.1.3 licenseDocumentationRole (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.4.2 licenseTerms (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.4.3 licenseNote (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.4.4 licenseApplicableDates (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.4.4.1 startDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.4.4.2 endDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.5 statuteInformation (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.5.1 statuteJurisdiction (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.5.2 statuteCitation (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.5.3 statuteInformationDeterminationDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.5.4 statuteNote (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.5.5 statuteDocumentationIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.5.5.1 statuteDocumentationIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.5.5.2 statuteDocumentationIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.5.5.3 statuteDocumentationRole (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.5.6 statuteApplicableDates (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.5.6.1 startDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.5.6.2 endDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.6 otherRightsInformation (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.6.1 otherRightsDocumentationIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.6.1.1 otherRightsDocumentationIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.6.1.2 otherRightsDocumentationIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.6.1.3 otherRightsDocumentationRole (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.6.2 otherRightsBasis (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.6.3 otherRightsApplicableDates (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.6.3.1 startDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.6.3.2 endDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.6.4 otherRightsNote (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.7 rightsGranted (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.7.1 act (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.7.2 restriction (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.7.3 termOfGrant (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.7.3.1 startDate (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.7.3.2 endDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.7.4 termOfRestriction (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.7.4.1 startDate (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="3"> 4.1.7.4.2 endDate (O, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.7.5 rightsGrantedNote (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.8 linkingObjectIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.8.1 linkingObjectIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.8.2 linkingObjectIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.8.3 linkingObjectRole (O, R) </cell>
                        </row>
                        <row>
                            <cell n="1"> 4.1.9 linkingAgentIdentifier (O, R) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.9.1 linkingAgentIdentifierType (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.9.2 linkingAgentIdentifierValue (M, NR) </cell>
                        </row>
                        <row>
                            <cell n="2"> 4.1.9.3 linkingAgentRole (O, R) </cell>
                        </row>
                        <row>
                            <cell> 4.2 rightsExtension (O, R) </cell>
                        </row>
                    </table>
                </div>
                <xi:include href="su/rights/rightsStatement.xml" parse="xml"/>
                <xi:include href="su/rights/rightsStatementIdentifier.xml" parse="xml"/>
                <xi:include href="su/rights/rightsStatementIdentifierType.xml" parse="xml"/>
                <xi:include href="su/rights/rightsStatementIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/rights/rightsBasis.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightInformation.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightStatus.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightJurisdiction.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightStatusDeterminationDate.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightNote.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightDocumentationIdentifier.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightDocumentationIdentifierType.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightDocumentationIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/rights/copyrightDocumentationRole.xml" parse="xml"/> 
                <xi:include href="su/rights/copyrightApplicableDates.xml" parse="xml"/>
                <xi:include href="su/rights/startDate.xml" parse="xml"/>
                <xi:include href="su/rights/endDate.xml" parse="xml"/>
                <xi:include href="su/rights/licenseInformation.xml" parse="xml"/>
                <xi:include href="su/rights/licenseDocumentationIdentifier.xml" parse="xml"/>
                <xi:include href="su/rights/licenseDocumentationIdentifierType.xml" parse="xml"/>
                <xi:include href="su/rights/licenseDocumentationIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/rights/licenseDocumentationRole.xml" parse="xml"/>
                <xi:include href="su/rights/licenseTerms.xml" parse="xml"/>
                <xi:include href="su/rights/licenseNote.xml" parse="xml"/>
                <xi:include href="su/rights/licenseApplicableDates.xml" parse="xml"/>
                <xi:include href="su/rights/licenseStartDate.xml" parse="xml"/>
                <xi:include href="su/rights/licenseEndDate.xml" parse="xml"/>
                <xi:include href="su/rights/statuteInformation.xml" parse="xml"/>
                <xi:include href="su/rights/statuteJurisdiction.xml" parse="xml"/>
                <xi:include href="su/rights/statuteCitation.xml" parse="xml"/>
                <xi:include href="su/rights/statuteInformationDeterminationDate.xml" parse="xml"/>
                <xi:include href="su/rights/statuteNote.xml" parse="xml"/>
                <xi:include href="su/rights/statuteDocumentationIdentifier.xml" parse="xml"/>
                <xi:include href="su/rights/statuteDocumentationIdentifierType.xml" parse="xml"/>
                <xi:include href="su/rights/statuteDocumentationIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/rights/statuteDocumentationRole.xml" parse="xml"/>
                <xi:include href="su/rights/statuteApplicableDates.xml" parse="xml"/>
                <xi:include href="su/rights/statueStartDate.xml" parse="xml"/>
                <xi:include href="su/rights/statueEndDate.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsInformation.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsDocumentationIdentifier.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsDocumentationIdentifierType.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsDocumentationIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsDocumentationRole.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsBasis.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsApplicableDates.xml" parse="xml"/>
                <xi:include href="su/rights/otherStartDate.xml" parse="xml"/>
                <xi:include href="su/rights/otherEndDate.xml" parse="xml"/>
                <xi:include href="su/rights/otherRightsNote.xml" parse="xml"/>
                <xi:include href="su/rights/rightsGranted.xml" parse="xml"/>
                <xi:include href="su/rights/act.xml" parse="xml"/>
                <xi:include href="su/rights/restriction.xml" parse="xml"/>
                <xi:include href="su/rights/termOfGrant.xml" parse="xml"/>
                <xi:include href="su/rights/grantStartDate.xml" parse="xml"/>
                <xi:include href="su/rights/grantEndDate.xml" parse="xml"/>
                <xi:include href="su/rights/termOfRestriction.xml" parse="xml"/>
                <xi:include href="su/rights/restrictionStartDate.xml" parse="xml"/>
                <xi:include href="su/rights/restrictionEndDate.xml" parse="xml"/>
                <xi:include href="su/rights/rightsGrantedNote.xml" parse="xml"/>
                <xi:include href="su/rights/linkingObjectIdentifier.xml" parse="xml"/>
                <xi:include href="su/rights/rightsLinkingObjectIdentifierType.xml" parse="xml"/>
                <xi:include href="su/rights/rightsLinkingObjectIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/rights/rightsLinkingObjectRole.xml" parse="xml"/>
                <xi:include href="su/rights/rightsLinkingAgentIdentifier.xml" parse="xml"/>
                <xi:include href="su/rights/rightsLinkingAgentIdentifierType.xml" parse="xml"/>
                <xi:include href="su/rights/rightsLinkingAgentIdentifierValue.xml" parse="xml"/>
                <xi:include href="su/rights/rightsLinkingAgentRole.xml" parse="xml"/>
                <xi:include href="su/rights/rightsExtension.xml" parse="xml"/>
             </div>
       </body>
        <back>
            <div type="appendix" xml:id="appendixSpecialTopics">


                <head>SPECIAL TOPICS</head>
                <p>This section describes several important topics that are too detailed for the
                    Data Dictionary itself. The discussion here provides background information
                    about semantic units and illustrates the thinking behind PREMIS.</p>

                <div>
                    <head>Format information</head>
                    <p>Formats are an important aspect of digital preservation but before specific
                        semantic units can be defined some fundamental questions need to be
                        addressed including:</p>
                    <list type="bulleted">
                        <item>What is a format?</item>
                        <item>What types of objects have a format?</item>
                        <item>How does one identify a format?</item>
                        <item>Is there a difference between a format and a profile?</item>
                    </list>

                    <p>The concept of format seems almost intuitive, but given the importance of
                        format information to digital preservation PREMIS needs to be very specific
                        about its meaning. The defining feature of a format is the fact that a
                        format has to correspond to some formal or informal specification; it cannot
                        be a random or undocumented layout of bits. Existing definitions do not seem
                        to emphasize this feature sufficiently. Hence, PREMIS uses its own
                        definition: <italic>a specific, pre-established structure for the
                            organization of a digital file or bitstream.</italic></p>
                    <p>Format is obviously a property of files, but it can also apply to bitstreams.
                        For example, an image bitstream within a TIFF file may have a format that is
                        defined within the TIFF file format specification. For this reason PREMIS
                        avoids the term “file format” and instead uses the more generic term “
                        format.”</p>
                    <p>A preservation repository must record format information as specifically as
                        possible. Ideally, formats would be identified by a direct link to the full
                        format specification. In real implementations an indirect link such as code
                        or string that can in turn be associated with the full format specification
                        is more practical. Format name is a somewhat arbitrary designation that can
                        be used as this indirect link. However, two complications arise when
                        attempting to define the semantic unit(s) to be used as this link.</p>
                    <p>First, format designations in common use, such as MIME types and filetype
                        extensions, are not granular enough to be used in this way without the
                        addition of version information. One possible way to deal with this is to
                        include the version in the format name (e.g., “TIFF 6.0”). The alternative
                        is to define two semantic units, one for name and one for version. To allow
                        existing authority lists such as MIME type to be used it was decided to use
                        the latter approach. Hence, in the Data Dictionary
                            <italic>formatDesignation</italic> has two components:
                            <italic>formatName</italic> and <italic>formatVersion</italic>.</p>
                    <p>Second, centrally maintained format registries are expected to be the best
                        way to get detailed format information in the future.<note n="32">See, for
                            example, PRONOM at <ref
                                target="http://www.nationalarchives.gov.uk/pronom"
                                >http://www.nationalarchives.gov.uk/pronom</ref>,the Unified Digital
                            Format Registry at <ref target="http://www.udfr.org/">
                                http://www.udfr.org/</ref>.</note> In the PREMIS model the format
                        name provides an indirect link to the format specification. In the registry
                        environment not one but two things must be known: what registry is being
                        used, and what identifies the specification within the registry. One way to
                        deal with this is to combine all format identification into a single set of
                        semantic units. The alternative is to define different containers for
                        registry and non-registry environments. A good argument for a single set is
                        that a repository that uses its own authority list of format names to
                        associate digital objects with specifications is, in essence, maintaining
                        its own format registry, where the identification of the registry itself is
                        simply assumed. However, with major format registries still under
                        development it was decided that it was dangerous to make assumptions about
                        what would be needed to use them. Ultimately, two containers were defined:
                            <gi>formatDesignation</gi> and <gi>formatRegistry</gi>.</p>
                    <p>Within one <italic>format</italic> container it is mandatory that at least
                        one of these two semantic units be present to provide the necessary
                        identifying information. They are more explicitly linked when used
                        together.</p>
                    <p>It was also decided to make <italic>format</italic> repeatable to allow for
                        the cases where (a) more than one registry is in use, or (b) resolving
                        format identification is not immediately possible, or (c) more than one
                        equally specific format designation applies. </p>
                    <p>(a) If multiple registries are used, repeatability of the
                            <italic>format</italic> element makes it possible to clearly record
                        inconsistencies between the formats identified by each registry. To reduce
                        ambiguity, <italic>formatRegistryRole</italic> should be used to indicate
                        for which particular purpose a registry is being used: e.g. format
                        identification, format validation, characterization, profile identification.
                        Exactly one registry should be indicated by the
                            <italic>formatRegistryRole</italic> as the authoritative source for
                        identifying formats. <italic>formatNote</italic> should be used to record
                        supplementary, qualifying information, e.g. when several identifications are
                        true in conjunction [e.g. BWF and WAV].</p>
                    <p>(b) In practice, running tools for file identification may produce several
                        candidate identities per file or bitstream and resolving format
                        identification may not be immediately possible.<note n="33">Such tools
                            include DROID (<ref
                                target="http://www.nationalarchives.gov.uk/information-management/manage-information/preserving-digital-records/droid/"
                                >http://www.nationalarchives.gov.uk/information-management/manage-information/preserving-digital-records/droid/</ref>),
                            TRiD (<ref target="http://mark0.net/soft-trid-e.html"
                                >http://mark0.net/soft-trid-e.html</ref>), and Apache Tika (<ref
                                target="http://tika.apache.org/"
                            >http://tika.apache.org/</ref>).</note> Repeatability of the
                            <italic>format</italic> element makes it possible to capture them.
                            <italic>formatNote</italic> should be used to record supplementary,
                        qualifying information, when several identifications form a disjunction of
                        candidate formats [e.g., TIFF 3.0 or TIFF4.0]. It is not uncommon for
                        particular implementations of formats, often called profiles, to be
                        specified. For example, GeoTIFF (for geographic images), TIFF/EP (for
                        digital cameras), and TIFF/IT (for prepress images) are compatible with the
                        TIFF specification, but narrow it by requiring certain options, or extend it
                        by adding tags. Because of this it is possible for a file to have more than
                        one format, for example, both TIFF and GeoTIFF. There are various possible
                        options to accommodate this, such as recommending that both be recorded, or
                        defining a separate semantic unit for format profiles. However, in such
                        cases, PREMIS recommends recording the most specific format designation that
                        applies. Current format registries (e.g. PRONOM and UDFR) record format
                        profiles, extensions, and modifications as separate formats and indicate the
                        relationships among them. It is recognized that the most specific
                        designation is a matter of opinion and will be implementation specific. For
                        example, for a METS document (that is, an XML instance conforming to the
                        METS schema) one repository may consider XML to be the most specific format,
                        while another may consider METS to be the most specific format.</p>
                    <p>(c) In some cases, a file or bitstream will be found to conform to more than
                        one format specification, where each is equally specific (that is, neither
                        is a proper subset of theother). In this case, each of the formats should be
                        recorded separately. Multiple formats may also be recorded if it is
                        important to indicate the version of each.</p>
                </div>
                <div>
                    <head>Environment</head>
                    <p>Digital materials are distinctly different from analog materials because a
                        complex technical environment is interposed between user and content.
                        Application software, operating systems, computing resources, and even
                        network connectivity allow the user to render and interact with the content.
                        Separating digital content from its environmental context can make the
                        content unusable. Therefore, careful documentation of the technical
                        environment associated with an archived digital object can be an essential
                        component of preservation metadata.</p>
                    <p>With the advent of Intellectual Entities in PREMIS 3.0, the way in which
                        environments are modeled in PREMIS has been transformed. Before version 3.0,
                        there was an <italic>environment</italic> container within an Object that
                        described the environment supporting that Object. If a non-environment
                        Object needs to refer to an environment, it is now recommended that the
                        environment is described as an Object in its own right and the two Objects
                        are linked with a dependency relationship. The environment Object could be
                        conceptual (i.e. an Intellectual Entity) or could refer to a digitally
                        stored representation, file or bitstream. Unlike digital representations,
                        physical representations cannot be broken down into files. A physical object
                        can be described using an Intellectual Entity, while the physical object
                        itself is a representation of this Intellectual Entity. An environment
                        representation may describe either physical, tangible items, such as a
                        concrete physical instance of a floppy drive, or intangible items, such as
                        the software driver for it. A key result of this is that each environment
                        can be described and preserved independently.</p>
                    <p>We may take as an example the need to record that a non-environment Object (a
                        content Object) should use a particular piece of hardware, an operating
                        system and some application software to be rendered. Such information can be
                        recorded by linking the non-environment Object to three different
                        environment Intellectual Entities which would separately describe the
                        hardware, operating system and software application. In the latter two
                        cases, it is possible that these could be held as (non-environment)
                        representations, files or bitstreams in the repository (e.g., the operating
                        system could be a disk image and the software application could be an
                        executable of some sort). The non-environment Objects might link directly to
                        environment Intellectual Entities Objects as outlined in Figure
                        5, or the link could be indirect (i.e. it
                        links to an environment Intellectual Entity which in turn links to the
                        digital instantiation of that environment), as outlined in Figure
                        6.</p>
                    <figure>
                        <graphic url="PREMIS_Figure5.png" xml:id="figure5"/>
                        <figDesc>Figure 5. An object and its rendering environment: direct link</figDesc>
                    </figure>
                    <figure>
                        <graphic url="PREMIS_Figure6.png" xml:id="figure6"/>
                        <figDesc>Figure 6. An object and its rendering environment: indirect link</figDesc>
                    </figure>
                    <p>This way, each part of the environment stack can be independently described
                        and related to its own dependencies, as outlined in Figure
                        7.</p>

                    <figure>
                        <graphic url="PREMIS_Figure7.png" xml:id="figure7"/>
                        <figDesc>Figure 7. Parts of an environment stack and dependency relationships
                            between them</figDesc>
                    </figure>
                    <p>One should also record the <bold>purpose</bold> of an environment in a
                        particular context (<italic>create</italic>, <italic>render</italic>,
                            <italic>edit</italic>) and an assessment of the extent to which the
                        described environment supports its purpose(<italic>minimal</italic>,
                            <italic>recommended</italic>, <italic>known to work</italic>), which
                        PREMIS calls its <italic>characteristic</italic>. This information is
                        context dependent, because the same environment can be used to create or
                        render objects in different contexts. Therefore this information is not an
                        attribute of an environment, but rather an association between an
                        environment and an Object that it supports in some way. To record such
                        information accurately, the <italic>relationship</italic> semantic container
                        has been enriched with two additional semantic components:
                            <italic>relatedEnvironmentPurpose</italic> and
                            <italic>relatedEnvironmentCharacteristic</italic>.</p>
                    <p>To enable this to work it has been necessary to introduce two new semantic
                        units to Object that only apply to Intellectual Entities that model
                        environments: <italic>environmentFunction</italic> and
                            <italic>environmentDesignation</italic>.</p>
                    <p>The first of these (<italic>environmentFunction</italic>) allows for a
                        description of the type of the environment. This classification can be at
                        any required level of specificity. At the most generic level all
                        environments are either hardware or software; when one refines these types,
                        you can have more specific values (e.g. chip set or peripheral might be 2nd
                        level functions where the 1st level was hardware, while operating system or
                        application software might be 2nd level functions where the 1st level was
                        software). To allow implementers to record as many levels of specificity as
                        they wish, the <italic>environmentFunction</italic> semantic container is
                        repeatable, with the actual category being recorded in
                            <italic>environmentFunctionType</italic> and their level of specificity
                        recorded in <italic>environmentFunctionLevel</italic>. The implementer can
                        choose only to record the most specific type, in which case the level is
                        optional (as only one is recorded).</p>
                    <p>The second of these (<italic>environmentDesignation</italic>) is designed to
                        allow a clear description of the environment. However, when making reference
                        to an environment it is sometimes desirable to be very generic (e.g. a range
                        of versions, like “Firefox version 2 or later”) and sometimes to be very
                        specific (e.g., a particular release of a specialist piece of application
                        software with a given patch set applied). Hence, the
                            <italic>environmentDesignation</italic> semantic unit must accommodate
                        both needs. To achieve these, the semantic unit is split into three main
                        subsidiary parts: <italic>environmentName</italic>,
                            <italic>environmentVersion</italic>,
                            <italic>environmentDesignationNote</italic> as well as allowing for any
                        extension via the <italic>environmentDesignationExtension</italic> semantic
                        unit.</p>
                    <p>Of the three main subsidiary parts of
                        <italic>environmentDesignation</italic>, only
                            <italic>environmentName</italic> is mandatory and the others are
                        optional. A very generic environment would only have this first element set:
                        for example, to model any version of an internet browser, an Intellectual
                        Entity could be created with the <italic>environmentName</italic> set to be
                        simply the name of the internet browser and no
                            <italic>environmentVersion</italic> nor
                            <italic>environmentDesignationNote</italic> nor
                            <italic>environmentDesignationExtension</italic>.</p>
                </div>
                <div>
                    <head>Designating a specific environment: implementation considerations</head>
                    <p>The distinction between name and version can be vague in some cases.
                        Sometimes, a new version of a software or hardware product becomes a
                        standalone product in its own right. For instance, Windows XP is, strictly
                        speaking, a version of the Windows NT operating system architecture. But in
                        its software roadmap, it is rather considered an independent product with
                        itsparticular version numbers and lifecycle. If one wants to describe
                        Windows XP Professional Service Pack 2, the following implementation options
                        are possible:</p>
                    <list type="ordered">
                        <item>Record Windows NT in <italic>environmentName</italic> and Windows XP
                            Professional Service Pack 2 in <italic>environmentVersion</italic>.
                            Here, Windows NT is considered the primary product being
                            described.</item>
                        <item>Record Windows XP in <italic>environmentName</italic>, and record
                            Windows XP Professional Service Pack 2 in
                                <italic>environmentVersion</italic>. Here, the primary product is
                            considered to be Windows XP.</item>
                        <item>Record Windows XP Professional in <italic>environmentName</italic> and
                            Service Pack 2 in <italic>environmentVersion</italic>. Here the primary
                            product is considered to be Windows XP Professional.</item>
                    </list>
                    <p>The three implementation options are valid, though 2 or 3 are considered the
                        most relevant from a preservation standpoint, as the level of granularity of
                        the product must capture the characteristics used in preservation watch. For
                        example, the preservation of the operating system relies very much on the
                        lifecycle roadmap of the product within Microsoft. This is, in this example,
                        clearly relevant at the Windows XP level (2) or, even more so, at the level
                        of a particular edition (3). Thus, implementation option (3) should be the
                        most satisfactory way to record that, all other things being equal.</p>
                    <p>Another relevant example is the <italic>JHOVE</italic> file analysis
                        software: even though <italic>JHOVE 2</italic> declares itself as the second
                        major version of the <italic>JHOVE</italic> software application, it is a
                        completely different product with a different architecture, different
                        features, a different maintaining agency, and an independent lifecycle
                            (<italic>JHOVE 1</italic> and <italic>JHOVE 2</italic> continue to
                        evolve in parallel). For these reasons, it would be better to have
                            <italic>JHOVE 2</italic> in <italic>environmentName</italic>, and record
                        the specific build number of the software preserved or used in the
                        repository in <italic>environmentVersion</italic>.</p>
                    <p>In any case, an implementer should define their own naming policy to express
                        name and version information and apply it consistently for all their
                        environment descriptions.</p>
                </div>
                <div>
                    <head>Handling different levels of specificity at the same time: a possible
                        strategy</head>
                    <p>For example, suppose there is a need to model the Ubuntu operating system and
                        we need to reference version 12.0 and the 32-bit version. If there is a need
                        to reference both generic and specific versions of this operating system, it
                        is likely that a decision would be made to create a hierarchy of
                        Intellectual Entities and maintain each
                            <italic>environmentDesignation</italic> element throughout the
                        hierarchy, simply adding more elements as specificity increases. So, a
                        top-level Intellectual Entity could be created where only
                            <italic>environmentName</italic> has been set (to “Ubuntu”), a 2nd level
                        Intellectual Entity could be created where, in addition, the
                            <italic>environmentVersion</italic> has been set (to “12.0”) and a 3rd
                        level Intellectual Entity could be created where, in addition, the
                            <italic>environmentDesignationNote</italic> has been set (to “32 bit”).
                        The links between these entities would be modeled using the
                            <italic>relationship</italic> semantic unit to link each level to its
                        parent level. This would provide a natural hierarchy where other versions of
                        the operating system can easily be added (e.g., by adding another 3rd level
                        Intellectual Entity for a “64 bit” version which would be linked to the same
                        2nd level Intellectual Entity as its “32 bit” sibling). In this particular
                        arrangement, it is possible to reference any Ubuntu operating system, any
                        version of the Ubuntu operating system and specific operation systems. If it
                        was decided that there was a need to refer to 32-bit Ubuntu operating
                        systems across versions a slightly different hierarchy could be created.
                        Equally, further refinement would be needed (e.g., expanding
                            <italic>environmentDesignationNote</italic>) if it was felt that more
                        specificity was needed (e.g., recording patch releases etc.).</p>
                    <p>In addition, as digital environments are made up of components that can be
                        broken down into smaller and smaller components, their descriptions can
                        easily become extremely complex. Simultaneously, itis likely that these
                        descriptions will tend to be the same for entire classes of digital objects,
                        for example, for all Files of a particular format. The combination of these
                        two factors suggests that the most efficient model for collecting and
                        maintaining environment metadata is a centralized registry (or series of
                        registries). Some registries do exist but they are not necessarily complete
                        (e.g., they are limited to a certain kind of environment and/or to a
                        specific domain, like web archiving) and they also have a mixture of generic
                        and specific definitions of entities.<note n="34">See for example the TOTEM
                            Registry delivered as part of the KEEP project, <ref
                                target="http://www.keep-totem.co.uk/"
                                >http://www.keep-totem.co.uk/</ref>. PRONOM also contains an amount
                            of software information, <ref
                                target="http://apps.nationalarchives.gov.uk/PRONOM/Default.aspx"
                                >http://apps.nationalarchives.gov.uk/PRONOM/Default.aspx</ref>.</note>
                        Hence, PREMIS allows the modeling of environments both with reference to an
                        external registry and without. To allow a registry to be referenced, the
                            <italic>environmentRegistry</italic> semantic unit should be used. This
                        allows the registry to be specified (via
                            <italic>environmentRegistryName</italic>), the identifier for the
                        corresponding environment in that registry to be specified (via
                            <italic>environmentRegistryKey</italic>) and the role of the registry to
                        be clarified (via <italic>environmentRegistryRole</italic>). As these
                        semantic units are conceptually identical to the way the
                            <italic>formatRegistry</italic> works, they will not be explained here
                        in much detail. However, it is worth mentioning that the
                            <italic>environmentRegistryRole</italic> could be used to document the
                        potential mismatch between a generic registry entry and a more specific
                        Object created in PREMIS (i.e. to record that the registry role is
                        describing a more generic entity that the PREMIS Object is modeling).</p>
                    <p>In most cases, environments will not be held to render individual bitstreams,
                        since software operates on known file formats, or in the case of compound
                        objects, on aggregations ofknown file formats. However, it could apply to
                        bitstreams in some situations. For instance, it is possible for a single AVI
                        file to be used as the common container for video streams each requiring the
                        use of specialized rendering software. In an AVI file encapsulating
                        heterogeneous bitstreams, each of the bitstreams may require a substantially
                        unique preservation workflow. Setting the environment at the bitstream level
                        maintains the important association that a particular bitstream requires a
                        particular environment. If the environment were set at the file level, this
                        association would be lost, complicating preservation efforts that require
                        the disaggregation of the file.</p>
                    <p>In other cases a file format may contain two or more discrete bitstreams with
                        wholly different semantics, but software designed to support the format may
                        be able to correctly interpret and/or render any bitstream appearing within
                        the file. For example, a TIFF viewer rendering an image knows to skip past
                        the header information (a bitstream within the file) to reach the image data
                        (a second bitstream within the file). It is not always necessary to link to
                        separate environment information for each of these bitstreams if they are
                        both handled by any rendering application compatible with the TIFF format
                        specification.</p>
                    <p>It is also worth noting that a representation may relate to a different
                        environment than the individual files that constitute that representation.
                        For example, a browser is appropriate for rendering a multimedia web page
                        consisting of text, static images, animation, and sound components, but each
                        individual file rendered separately would require different environments
                        than the one for the compound object (representation) as a whole.</p>
                    <p>Note that PREMIS is not attempting to hold all the information needed to
                        determine the mechanism(s) by which archived objects are delivered from the
                        repository to the user (e.g., over a network, on CD, on DVD, etc.). This is
                        not seen as a core preservation process. Moreover, the usefulness of a
                        delivery mechanism description will likely vary from repository to
                        repository, depending on local dissemination policies. However, the
                        environment information held in PREMIS could help such dissemination
                        mechanism make a decision about how to deliver content.</p>
                </div>
                <div>
                    <head>Object characteristics and composition level: the “onion” model</head>
                    <p>When an object is compressed or encrypted, the format of the object is
                        determined by the compression or encryption scheme. At the same time, the
                        object has an underlying format that is different. Objects such as these
                        pose the problem of how to describe complex layers of encodings and
                        encryptions so that they can be reversed correctly. PREMIS uses the metaphor
                        of an onion: a digital object can be wrapped in layers of encodings that
                        need to be “peeled off” in a particular sequence. The onion model is
                        implemented by treating each layer as a “composition level,” and organizing
                        metadata into sets of values pertaining to each layer.</p>
                    <p>The simplest example is a single file with no additional encoding or
                        encryption (beyond that inherent in its format). In this case there would be
                        one instance of the semantic unit <italic>objectCharacteristics</italic>
                        with <italic>compositionLevel</italic> value of 0 (zero). The object
                        characteristics of a simple PDF, for example, might include a message
                        digest, a size of 500,000 bytes, a format of PDF 1.2, inhibitors such as no
                        printing allowed, and a creating application of Adobe Acrobat. If a
                        compressed version of that PDF file were created using the UNIX gzip utility
                        and stored in the repository, the compressed file would be described with
                        two <italic>objectCharacteristics</italic> blocks. The first, with
                            <italic>compositionLevel</italic> zero, would be the same as for the
                        simple PDF, and the second with <italic>compositionLevel</italic> 1, would
                        record another message digest, a smaller size, and a format of gzip. This
                        could continue for as many layers as necessary to describe the object
                        completely.</p>
                    <p>To extract the content object, one works backwards through the composition
                        levels from highest to lowest, using an application appropriate to the
                        format of the layer. In the example above, to get to the PDF one applies a
                        tool that understands the gzip format. Having un-gzipped the content, it can
                        be compared to the size and fixity information previously stored to
                        determine that the correct object has been extracted. (In practice, some of
                        the encodings have checking mechanisms built in.)</p>
                    <p>Note that this model assumes that the object is being stored with the
                        composition layers preserved. If the archive has already removed the layers
                        and is storing the base object, the information about the removal of the
                        layers is Event data rather than composition data. That is, if a
                        decompressed version of object A is created and called object B, A is
                        related to B by a derivation relationship (sourceOf) with a related
                        decompression Event.</p>
                    <p>To extract the content object, one works backwards through the composition
                        levels from highest to lowest, using an application appropriate to the
                        format of the layer. In the example above, to get to the PDF one applies a
                        tool that understands the gzip format. Having un-gzipped the content, it can
                        be compared to the size and fixity information previously stored to
                        determine that the correct object has been extracted. (In practice, some of
                        the encodings have checking mechanisms built in.)</p>
                    <p>Note that this model assumes that the object is being stored with the
                        composition layers preserved. If the archive has already removed the layers
                        and is storing the base object, the information about the removal of the
                        layers is Event data rather than composition data. That is, if a
                        decompressed version of object A is created and called object B, A is
                        related to B by a derivation relationship (sourceOf) with a related
                        decompression Event.</p>
                    <p>Bitstreams and filestreams are not composition layers. If an archive chooses
                        to manage bitstream or filestream objects, they are separate objects whose
                        storage location is at an offset inside a file, which is itself a separate
                        object with characteristics and metadata and its own storage location. Each
                        of these may have composition layers including encryption and encodings. The
                        level-zero composition layer of the file would be the file without
                        additional encryption or encoding (beyond that inherent in its format); that
                        a bitstream inside that file is a managed object is a separate issue (and
                        object) distinct from the layers of encodings of the file.</p>
                    <p>Formats such as tar and ZIP that can bring together (“package”) several files
                        into one file present a related but not identical problem. If the package
                        consists of only one object, one could treat the package as yet another
                        composition layer; for example, a file that is encrypted, then zipped would
                        have three composition levels. If the package contains more than one file,
                        however, it should be treated as a separate object that provides the storage
                        location for the contained objects so that there can be a distinct metadata
                        record for each of the contained objects. For example, a ZIP file containing
                        two PDF files should be treated as three objects: the ZIP file with a base
                        composition format of ZIP, and two other objects whose storage location is
                        inside the ZIP file. As with bitstreams, the objects inside the ZIP file
                        object are logically distinct from the containing object. They each may have
                        completely different sets of metadata and indeed may have additional
                        composition layers as well. One could imagine an encrypted ZIP file
                        containing two files that are themselves each separately encrypted. There
                        would then be three objects, each with two composition levels.</p>
                    <p>With PREMIS 3, it is possible to record the creating application of an Object
                        as a discrete environment Object with a purpose of “create”. However, this
                        new mechanism does not tie the environment to a specific composition level,
                        but to the Object as a whole: in the example above of a gzip-compressed PDF
                        file, this would not be possible to specify that the creation environment
                        “UNIX gzip utility” is tied to the <italic>compositionLevel</italic> number
                        “1”, and that the creation environment “Adobe Acrobat” is tied to the
                            <italic>compositionLevel</italic> number “0”. For those reasons, it is
                        recommended to use <italic>creatingApplication</italic> whenever such
                        expressivity is required.</p>
                    <p>In some cases the composition level cannot be isolated, e.g. it is not
                        possible to automatically detect if a File is encrypted or not. In such
                        cases, it is recommended to explicitly state that the
                            <italic>compositionLevel</italic> is unknown as it is a tangible risk
                        for the preservation of the Object.</p>
                </div>
                <div>
                    <head>Fixity, integrity, authenticity</head>
                    <p>A digital preservation metadata standard needs to give considerable attention
                        to the concepts of fixity, integrity, and authenticity of digital objects.
                        Objects that lack these features are of little value to repositories that
                        have the mission to protect evidentiary value or indeed to preserve the
                        cultural memory.</p>
                    <p>In the PREMIS Data Dictionary the information needed to verify fixity (that
                        an object is unchanged since some earlier point in time) is described by a
                        set of semantic components under the semantic unit
                            <italic>objectCharacteristics</italic>. Running a fixity check program
                        on an object to detect unauthorized changes to it is detailed as an event.
                        In the analog world, acts of publication and production serve to fix an
                        object in time. In the digital domain, hash algorithms that create a message
                        digest can be used to implement a fixity check for an object. If the message
                        digest created by an algorithm at one point is identical to the message
                        digest created by the same algorithm at a later point, this indicates the
                        object did not change during the interim. In fact, it is common to create
                        and test two or more message digests using different algorithms to be
                        certain that an object is fixed.</p>
                    <p>While this procedure can indicate with some confidence that an object has not
                        changed over time, it does not address the object’s integrity or
                        authenticity. In the PREMIS model, verifying the integrity of an object is
                        considered an event. Format identification and validation are key indicators
                        of the integrity of a file. Software technology such as JHOVE can verify
                        that a format is what its file extension claims, as well as determining the
                        level of compliance to a particular format specification.<note n="35"> JHOVE
                            – JSTOR/Harvard Object Validation Environment, <ref
                                target="http://jhove.openpreservation.org/"
                                >http://jhove.openpreservation.org/</ref>.</note> The integrity of a
                        representation may have to be verified by special programs that understand
                        the structure of the representation. If the representation includes
                        structural metadata, the structural metadata can be used to test that all
                        files are present and named correctly.</p>
                    <p>In some cases it is necessary to be pragmatic about enforcing integrity. For
                        example, a lot of filesthat purport to be HTML are not strictly compliant
                        with the format specification (e.g., failing to close tags). From a purist
                        point of view these files could be rejected from a repository. On one hand,
                        this would mean excluding a lot of files which most browsers could render,
                        since browsers are tolerant of such failings in current practice. On the
                        other hand, there is no guarantee that future browsers will be equally
                        tolerant especially as more modern ways of producing HTML tend to produce
                        files that are strictly compliant with the formal specification. In any
                        case, it is essential to record the fact that the file is not compliant to
                        the format specification. PREMIS allows such imperfections in determining
                        integrity to be recorded either in a <italic>formatNote</italic> semantic
                        unit or as the outcome of a validation event (see “Quirks and anomalies” in
                        “Non-core metadata”)<!-- TODO: internal referencing??? -->.</p>
                    <p>The authenticity of a digital object is the quality of being what it purports
                        to be. As the Digital Preservation Coalition (DPC) explains, “In the case of
                        electronic records, [authenticity] refers to the trustworthiness of the
                        electronic record as a record. Confidence in the authenticity of digital
                        materials over time is particularly crucial owing to the ease with which
                        alterations can be made.”<note n="36">Digital Preservation Handbook, <ref
                                target="http://www.dpconline.org/advice/preservationhandbook"
                                >http://www.dpconline.org/advice/preservationhandbook</ref>.</note></p>
                    <p>Authentication, or the demonstration of authenticity, is multifaceted, and
                        is, ultimately, a matter of human judgment often relying on the skills of an
                        archivist, librarian or other trained individual. However, they need
                        evidence to help them in this work including both technical and procedural
                        evidence. Such evidence may include the maintenance of detailed
                        documentation of digital provenance (the history of the object), the
                        preservation of a copy of the object that bit-wise is identical to the
                        content as submitted, the preservation of a representation that retains all
                        the characteristics identified as important (significant properties), and
                        the use of digital signatures. PREMIS metadata supports the documentation of
                        provenance by defining semantic units associated with Events and allowing
                        linking between Object entities and Event entities. Fixity can be tested
                        against stored message digest information and the testing itself recorded as
                        an event. Digital signatures can also aid authentication and are discussed
                        next.</p>
                </div>
                <div>
                    <head>Digital signatures</head>

                    <p>Digital signatures rely on an external (mutually trusted) authority to verify
                        the signature. This is relatively new technology with a variety of
                        authorities and exact methodologies and there is noguarantee that the
                        verification service used will remain available in the very long term.
                        Hence, as is described in more detail below, they provide a potential
                        problem for repositories aiming to provide long-term digital
                        preservation.</p>
                    <p>Preservation repositories use digital signatures in three main ways:</p>
                    <list type="bulleted">
                        <item>For <bold>submission</bold> to the repository, an Agent (author or
                            submitter) might sign an object to assert that it truly is the author or
                            submitter.</item>
                        <item>For <bold>dissemination</bold> from the repository, the repository may
                            sign an object to assert that it truly is the source of the
                            dissemination.</item>
                        <item>For <bold>archival storage</bold>, a repository may want to archive
                            signed objects so that it will be possible to confirm the origin and
                            integrity of the data.</item>
                    </list>
                    <p>The first and second usages are common today as digital signatures are used
                        in the transmission of business documents and other data. Typically,
                        validation takes place shortly after signing and there is no need to
                        preserve the signature itself over time. In the first case the repository
                        may record the act of validation as an event, and save related information
                        needed to demonstrate provenance in the event detail. In the second case the
                        repository might also record the signing as an event but the use of the
                        signature is the responsibility of the receiver. Only in the third case,
                        where digital signatures are used by the repository as a tool to confirm the
                        authenticity of its stored digital objects over time, must the signature
                        itself and the information needed to validate the signature be
                        preserved.</p>
                    <p>Just as with a pen-and-ink signature or seal, reliable digital signatures
                        require that:</p>
                    <list type="bulleted">
                        <item>The process of producing a signature is considered to be unique to the
                            producer.</item>
                        <item>The signature is related to the content of the document that was
                            signed.</item>
                        <item>The signature can be recognized by others to be the signature of the
                            person or entity that produced it.</item>
                    </list>
                    <p>To create a digital signature, first a secure hash algorithm (SHA) is applied
                        to content (a file or bitstream) and used to produce a short message digest
                        from that content. The message digest and, optionally, related information
                        are then encrypted using asymmetric cryptography. Asymmetric cryptography is
                        based on using a pair of keys: a private key to encrypt and a public key to
                        decrypt. The private key must be held secretly and securely by the signer,
                        ideally in secure hardware. This accomplishes the goal of a signature unique
                        to the producer. Since the message digest that is encrypted is tied directly
                        to the content this also accomplishes the goal of relating the signature to
                        the content. The signature can be verified by decrypting the signature with
                        the signer’s public key and comparing the now-decrypted digest with a new
                        digest produced by the same algorithm from the same content. If the content
                        had been changed, the comparison would fail.</p>
                    <p>The goal of connecting the signature to the signer is based on establishing
                        trust between Agentsthat may be internal or external to the repository. For
                        example, agent A ought to trust a signature by agent B if a third party
                        trusted by A asserts that the signature is truly B’s. This principle governs
                        notarization of written signatures. The same approach is used in digital
                        signatures, where a trusted third party certifies that a particular key is
                        indeed the public key of the signer. This extends to a chain of trust,
                        whereby the trusted body trusts an intermediary which in turn certifies the
                        signer’s public key. This process is typically, but not necessarily,
                        implemented using X.509 certificates, or certificate chains.</p>
                    <p>This is important for preservation, because the standard current mechanisms
                        for establishing trust in a certificate relies on a set of services that are
                        not likely to be available for the long term. For preservation, widely
                        sharing and safely storing the public key as a formal document may be a more
                        suitable approach. For example, a university might regularly publish its
                        public key in its annual report and make it available on its Web site.</p>
                </div>
                <div>
                    <head>Digital signature metadata</head>
                    <p>For a preservation repository to validate a digital signature at a later
                        date, the repository will need to store:</p>
                    <list type="bulleted">
                        <item>The digital signature itself.</item>
                        <item>The name of the hash algorithm and encryption algorithm used to
                            produce the digital signature.</item>
                        <item>The parameters associated with these algorithms.</item>
                        <item>The chain of certificates needed to validate the signature (if a
                            certificate model is used to relate the signer and the signer’s public
                            key).</item>
                    </list>
                    <p>It is recommended that a repository also store the definitions of the
                        algorithms and relevant standards (e.g., for encoding the keys) so that
                        these methods could be re-implemented if necessary.</p>
                    <p>The W3C’s <italic>XML-Signature Syntax and Processing (XMLDsig)</italic> is a
                        de facto standard for encoding digital signatures that provides a clear
                        functional model for them.<note n="37">XML-Signature Syntax and Processing,
                            W3C Recommendation 12 February 2002, <ref
                                target="http://www.w3.org/TR/xmldsig-core/"
                                >http://www.w3.org/TR/xmldsig-core/</ref>.</note> PREMIS adopted the
                        names and structure of semantic units from that specification where
                        applicable. However, <italic>XMLDsig</italic> is both too generalized and
                        too specific to be universally applicable in a preservation context. It is
                        too generalized because it allows multiple data objects (files and/or
                        bitstreams in the PREMISmodel)to be signed together, while in the PREMIS
                        model a digital signature is a property of a single object. It is too
                        specific because it prescribes a particular encoding and validation
                        methodology that is not universally applicable.</p>
                    <p>The Data Dictionary defines the following structure:</p>
                    <p>                        
                        <table cols="1">
                            <row>
                                <cell> </cell>
                            </row>
                            <row>
                                <cell>1.8 signatureInformation (O, R) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="1">1.8.1 signature (O, R)</cell>
                            </row>
                            <row>
                                <cell n="2">1.8.1.1 signatureEncoding (M, NR) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="2">1.8.1.2 signer (O, NR) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="2">1.8.1.3 signatureMethod (M, NR) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="2">1.8.1.4 signatureValue (M, NR) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="2">1.8.1.5 signatureValidationRules (M, NR) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="2">1.8.1.6 signatureProperties (O, R) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="2">1.8.1.7 keyInformation (O, NR) [File, Bitstream]</cell>
                            </row>
                            <row>
                                <cell n="1">1.8.2 signatureInformationExtension (O, R) [File, Bitstream]</cell>
                            </row>
                        </table>
                    </p>
                    <p>The hash and encryption algorithms employed are recorded in
                            <italic>signatureMethod</italic>; for example, “DSA-SHA1” would indicate
                        the encryption algorithm is DSA and the hash algorithm is SHA1. The digital
                        signature itself is the <italic>signatureValue</italic>. Information about
                        the generation of the signature that is not needed to validate the signature
                        (e.g., the date and time the signature was generated) is stored in
                            <italic>signatureProperties</italic>. The public key used to validate
                        the signature is indicated in <italic>keyInformation</italic>. Since there
                        are many types of keys each with different structures, these structures were
                        not defined in the Data Dictionary and implementers will need to use
                        externally defined structures. For this reason,
                            <italic>keyInformation</italic> is defined as an extensible container.
                        Where they apply, repositories are encouraged to use the
                            <italic>XMLDsig</italic> "KeyInfo" definitions in
                            <italic>keyInformation</italic>.</p>
                    <p>The semantic units discussed above have analogs in the
                            <italic>XMLDsig</italic>:</p>
                    <list type="simple">
                        <head><bold>PREMIS</bold> - <bold>XMLDsig</bold></head>
                        <item>signatureMethod -&lt;SignedInfo&gt;&lt;SignatureMethod&gt;</item>
                        <item>signatureValue - &lt;SignatureValue&gt;</item>
                        <item>signatureProperties - &lt;Object&gt;&lt;SignatureProperties&gt;</item>
                        <item>keyInformation - &lt;KeyInfo&gt;</item>
                        <item></item>
                    </list>
                    <p>Three semantic units not included in XMLDsig were added to the Data
                        Dictionary: <italic>signatureEncoding</italic>, <italic>signer</italic>, and
                            <italic>signatureValidationRules</italic>. The semantic
                        unitsignatureEncoding indicates the encoding of the values of the subsequent
                        semantic units; this is not included in <italic>XMLDsig</italic> because
                        that document mandates a particular encoding, which cannot be assumed in a
                        broader context. The name of the signer can be extracted from the signer’s
                        certificate if this is included in <italic>keyInformation</italic>, but
                        isolating this information in <italic>signer</italic> makes it easier to
                        access. Documentation of the process to be used in validating the signature
                        is stored or pointed to in <italic>signatureValidationRules</italic>. As
                        with <italic>signatureEncoding</italic>, this is not in
                            <italic>XMLDsig</italic> because <italic>XMLDsig</italic> requires a
                        particular validation method.</p>
                    <p>In cases where a repository is able to use <italic>XMLDsig</italic> and
                        prefers to do so, the entire schema can be used in place of the PREMIS
                            <italic>signature</italic> container, via the extension container
                            <italic>signatureInformationExtension</italic>. In this case the
                        mandatory PREMIS elements are either mandatory in <italic>XMLDsig</italic>
                            (<italic>signatureMethod</italic>, <italic>signatureValue</italic>) or
                        implied by the requirements of the <italic>XMLDsig</italic> specification
                            (<italic>signatureEncoding</italic>,
                            <italic>signatureValidationRules</italic>). In cases where a repository
                        cannot use or chooses not to use <italic>XMLDsig</italic>, it can still use
                        the "KeyInfo" elements defined in the <italic>XMLDsig</italic> schema to
                        define the semantic units recorded in <italic>keyInformation</italic>.</p>
                </div>
                <div>
                    <head>Non-core metadata</head>
                    <p>PREMIS does not attempt to include every possible metadata concept in the
                        Data Dictionary. Unless otherwise noted this does not imply that these
                        semantic units are not necessary or important in other contexts. For
                        specific implementations there may be legitimate reasons to record this
                        information in some form.</p>
                    <p><bold>Aggregation</bold>: Aggregation means the embedding of objects into a
                        larger object (rather than a collection of discrete objects). The property
                        of being an aggregate can be inferred from the presence of multiple files
                        and/or bitstreams, which can be inferred by the presence of whole/part
                        structural relationship between objects belonging to the same category. That
                        semantic unit makes no distinction between an aggregation that is ingested
                        and an aggregation that is created by the preservation repository for
                        storage or other purposes; however, this distinction was not felt to be
                        core.</p>
                    <p><bold>Quirks and anomalies</bold>: <italic>A Metadata Framework to Support
                            the Preservation of Digital Objects</italic><note n="1">A Metadata Framework to Support the Preservation of
                                Digital Objects (Dublin, Ohio: OCLC Online Computer Library Center,
                                2002), <ref
                                    target="http://www.oclc.org/research/projects/pmwg/pm_framework.pdf"
                                    >
                                    http://www.oclc.org/research/projects/pmwg/pm_framework.pdf</ref>.</note> defines “quirks” as “any
                        loss in functionality or change in the look and feel of the Content Data
                        Object resulting from the preservation processes and procedures implemented
                        by the archive.” “Anomalies” describe aspects of an object that do not meet
                        the specification for the object. Quirks and anomalies could be held as
                        either the outcomes of Events or classified as properties of Objects.</p>
                    <p>Object resulting from the preservation processes and procedures implemented
                        by the archive.” “Anomalies” describe aspects of an object that do not meet
                        the specification for the object. Quirks and anomalies could be held as
                        either the outcomes of Events or classified as properties of Objects. </p>
                    <p>The argument for treating these as outcomes of events is that quirks by
                        definition result from an event, and anomalies are discovered through the
                        event of validation. If treated this way, an anomaly would be recorded as
                        part of the description of a validation event; the semantic unit
                            <italic>eventOutcome</italic> would indicate problems, and the semantic
                        unit <italic>eventOutcomeDetail</italic> would record the known
                        anomalies.</p>
                    <p>An argument for treating quirks and anomalies as properties of an object is
                        that this appears to elevate them in importance and gives them a direct as
                        opposed to indirect association with the object.</p>
                    <p>The decision is arbitrary. The Data Dictionary generally treats quirks and
                        anomalies as outcomes of events, recorded in
                            <italic>eventOutcomeDetail</italic>. However, some specific “anomalies”
                        can also be recorded in other PREMIS entities if this is more appropriate
                        (e.g., deviations from format specifications can be recorded in the
                            <italic>formatNote</italic> semantic unit as discussed above).</p>
                    <p><bold>Byte order</bold>: Byte order determines whether numbers of more than
                        eight bits are stored from most to least significant (“big-endian”) or from
                        least to most significant (“little-endian”). Byte order is hardware
                        dependent and can cause problems when data is shared between different types
                        of computers. However, it does not pertain to all formats. For example, it
                        is irrelevant for encodings such as ASCII, where one byte equals one
                        character, and UTF-8, which is byte-order independent. Thus, byte order
                        might better be treated as format-specific technical metadata. It is noted
                        that ANSI/NISO Z39.87 (Data Dictionary – Technical Metadata for Digital
                        Still Images) <note n="38">ANSI/NISO Z39.87 - Data Dictionary - Technical
                            Metadata for Digital Still Images 2006 (R2011).</note> includes byte
                        order as technical metadata for images.</p>
                    <p><bold>Character encoding:</bold> This item of metadata is important, but it
                        is format-specific technical metadata, useful only for text files and files
                        that can include text.</p>
                    <p><bold>Dissemination format</bold>: PREMIS is based on the premise that the
                        “preservation format” is the object of preservation activity, which may or
                        may not be the same as the dissemination format. Whether or not the
                        preservation format is immediately renderable or is transformed for
                        dissemination is an implementation choice. For example, if the preservation
                        format is a TIFF image, one preservation repository might create a
                        dissemination version (say a JPEG image) on the fly for user access, while
                        another repository might deliver the TIFF master. A third repository might
                        store and process both the TIFF master and the JPEG access copy.</p>
                    <p>The Data Dictionary does not address the creation of metadata objects that
                        are not stored in a preservation repository. This is based on the assumption
                        that while a dissemination format is important to a repository
                        operationally, it is not core to preservation processes.</p>
                    <p><bold>Embedded metadata</bold>: Some formats allow file objects to contain
                        embedded metadata. The Data Dictionary does not contain any means of
                        indicating this for now, with the understanding that this will probably have
                        to be revisited in the next several years as more and more formats include
                        embedded metadata. For the time being, if embedded metadata is extracted and
                        stored elsewhere, there is no need to note the existence of embedded
                        metadata in the file.</p>
                    <p>It is also recognized that there is a distinction between standard embedded
                        metadata defined by a file format and locally defined metadata that might be
                        inserted into a file header. Any local divergences from standard formats
                        will likely need to be documented as anomalies.</p>
                    <p><bold>Event type</bold>: The semantic unit <italic>eventType</italic> is
                        core, but not all types of events were considered core, and some were
                        deliberately omitted from the list of suggested values provided in the Data
                        Dictionary. In particular, microfilming (preservation reformatting), moving
                        a file offline, and media refreshment are not core events. Events likely to
                        be handled by a storage system, such as mirroring or the creation of backup
                        copies, would probably be recorded in a system log and are not raised to the
                        level of an event that has metadata associated with it.</p>
                    <p><bold>Event next occurrence</bold>: Many actions taken by a preservation
                        repository are performed periodically, for example, daily or weekly
                        monitoring actions. It could be useful to record an action date or “tickler”
                        for the next scheduled occurrence of an event. This is considered a matter
                        of repository policy and implementation, and not a core property of
                        events.</p>
                    <p><bold>File pathname/URI</bold>: This element was seen as both implementation
                        specific and system dependent. It was not seen as information that would be
                        explicitly recorded in a repository. Often the pathname or location of an
                        object is not known in a content management system; only the unique object
                        identifier of the asset is known and needed for retrieval. Alternatively, in
                        some systems, such as the Handle system, the
                            <italic>objectIdentifier</italic> alone is sufficient for retrieving the
                        file. Therefore, a broader, less system-dependent semantic unit was defined:
                            <italic>contentLocation</italic>. It can be interpreted narrowly (a
                        value could be an exact path or a “fully qualified” path or filename) or
                        broadly (any information needed to retrieve a File from a storage system,
                        which may include information used by a resolution system such as the Handle
                        system).</p>
                    <p><bold>Global identifier</bold>: PREMIS does not consider the distinction
                        between an externally known identifier and an internally known identifier to
                        be significant. An internal identifier could easily become known outside of
                        the repository and then would be a global identifier. This raises the issue
                        of whether internal identifiers would be sufficiently unique in an external
                        context to function as a global identifier. However, as the
                            <bold>objectIdentifier</bold> always includes an identifier type as well
                        as value, the combination of type and value would be unique even if the type
                        were some local repository scheme. </p>
                    <p><bold>MIME type</bold>: The Internet Media Type and SubType (commonly called
                        “MIME type”) is subsumed under <italic>formatDesignation</italic>. Format
                        designation is intended to be more granular and precise than MIME type and
                        includes multiple format identification schemes, of which MIME type can be
                        one. A MIME type alone is not rigorous enough to identify formats for
                        digital preservation: not all formats have MIME types, it is too coarse a
                        typing mechanism, it is not necessarily current, and it provides no
                        versioning information. Good practice is to include format name and version
                        and use MIME type only if no other data is available.</p>
                    <p><bold>Modification date</bold>: The PREMIS data model asserts that metadata
                        describes only one Representation, File or Bitstream object at any given
                        time. If such an object is changed or modified, a new object is created that
                        is related to the previous one. Each new object then has its own set of
                        metadata, and the relationship between the two is also described. The model
                        does not allow for modifying a representation, file or bitstream object and
                        keeping a set of metadata that describes a history of changes about that
                        object. Therefore, there would be no modification date of a representation,
                        file or bitstream object, only a creation date for the new object. The act
                        of modification (e.g., migration, normalization) is documented as an event
                        and is linked to the object that is created as a result of these processes.
                        In PREMIS, modification date is considered in the context of an event record
                        that is associated with an Object, rather than a date associated with a
                        history of changes to the metadata associated with an Object.</p>
                    <p>It is worth noting that most operating systems will have a different way of
                        recording this information, and will use the term “last modified date” for
                        the date (and time) that the current filewas created. Some operating systems
                        also record a "creation date” which records the first date (and time) that a
                        file of that name existed even though this is a different object (albeit
                        often one that the current object was based off when it was created).</p>
                    <p><bold>Object type</bold>: There is no semantic unit for a genre or media type
                        that would classify objects on a much higher level than format (e.g., images
                        or videos). The METS schema allows such expressivity with the presence of a
                        USE attribute that can be applied to files and file groups, but currently
                        there is no controlled vocabulary defined for its values. This is
                        potentially useful information to know at the system level (for example, for
                        performing preservation actions on an entire class of materials) and
                        possibly for categorizing objects in terms of how they are rendered in
                        certain environments. However, high-level object typing is probably more
                        useful for exchange and access to objects than for preservation purposes.
                        Developing a universally acceptable list of object types is beyond the scope
                        of PREMIS and, without an authority list of types, this element would not be
                        entirely useful outside of the repository. This element might be recorded in
                        descriptive metadata.</p>
                    <p><bold>Permanence levels</bold>: The National Library of Medicine’s Permanence
                        ratings <note n="39">National Library of Medicine, Developing Permanence
                            Levels and the Archives for NLM’s Permanent Web Documents, November 2007
                            (last updated 10 June 2010), <ref
                                target="http://www.nlm.nih.gov/psd/pcm/devpermanence.html"
                                >http://www.nlm.nih.gov/psd/pcm/devpermanence.html</ref>.</note>
                        appear to be less a property of an Object entity than a property of an
                        entity defining business rules. Business rules are out of scope of
                        PREMIS.</p>
                    <p><bold>Profile conformance</bold>: A “profile” can be seen as a subtype or
                        refinement of a format; for example, the GeoTIFF specification can be seen
                        as a profile of TIFF. There was a question of whether profile conformance
                        should be seen as something separate from format validation. The PREMIS
                            <italic>format</italic> element is repeatable which means that both
                        format conformance and a more specific profile conformance can be recorded.
                        However, it is recommended to record only a single format at the most
                        specific level (e.g., in the example conformance to GeoTIFF could be
                        recorded which implies conformance to TIFF).</p>
                    <p><bold>Reason for creation</bold>: This is really descriptive metadata and
                        thus out of the scope of PREMIS. Also, PREMIS does not consider events or
                        processes that occur before ingest to be core knowledge for a preservation
                        repository. Some of the context surrounding object creation may be
                        documented in relation to the Object entity in
                            <italic>creatingApplication</italic> and the reason for creation could
                        be recorded as part of the <italic>eventDetail</italic> for the Event of
                        creation.</p>
                    <p><bold>Sibling relationships</bold>: Sibling relationships always have a
                        structural relationship (and may possibly also have a derivation
                        relationship), and should therefore fall under these relationship categories
                        rather than being a separate category of relationship. What renders them
                        potentially confusing is that the parent is not always stored within the
                        repository system. For example, a report created using Microsoft Word might
                        be processed to create a PDF version for printing and an HTML version for
                        online display. If both of these representations were stored in the
                        preservation archive without the original Word file, it might not be obvious
                        that the two representations have a sibling relationship.</p>

                </div>
            </div>
            <div type="appendix" xml:id="appendixGlossary">
                <head>GLOSSARY</head>
                <!-- TODO: Future task, make sure if another terms is referenced an internal link is made -->
                <p>This glossary defines a number of terms used in this Data Dictionary; recognizing
                    thatin some cases other groups may have given different meanings to some of
                    these terms. Terms were selected for inclusion in the glossary on the basis of
                    their relative importance or frequency of occurrence in the report and Data
                    Dictionary, and/or the potential for ambiguity or confusion in their
                    interpretation.</p>
                <p>Terms that are capitalized are defined elsewhere in the glossary.</p>
                <list type="gloss">
                    <label>Actionable:</label>
                    <item>Property of a Semantic Unit indicating that the Semantic Unit is
                        recorded/coded in such a way as to be processed automatically.</item>

                    <label>Agent:</label>
                    <item>Actor (human, machine, or software) associated with one or more Events and
                        or Rights associated with a Digital Object. Machine or software Agents can
                        themselves be captured as a Digital Object.</item>

                    <label>Anomaly:</label>
                    <item>Aspect of a Digital Object that does not meet the specification for the
                        Digital Object.</item>

                    <label>Authenticity:</label>
                    <item>Property that a Digital Object is what it purports to be; that is, that
                        the integrity of both the source and the content of the Digital Object can
                        be verified.</item>

                    <label>Bit-Level Preservation:</label>
                    <item>Preservation strategy in which the sole objective is to ensure that a
                        Digital Object remains fixed (unaltered) and viable (readable from media).
                        No effort is made to ensure that the Digital Object remains renderable or
                        interpretable by contemporary technology.</item>

                    <label>Bitstream:</label>
                    <item>Contiguous or non-contiguous data within a File that has meaningful common
                        properties for preservation purposes. A Bitstream cannot be transformed into
                        a standalone Filewithout the addition of File structure (headers, etc.)
                        and/or reformatting the Bitstream in order to comply with some particular
                        Format. Note that this definition is more specific than the common
                        definition of “bitstream” used in computer science.</item>

                    <label>Business Rules:</label>
                    <item> Policies and other restrictions, guidelines, and procedures governing the
                        administration and operation of a Preservation Repository.</item>

                    <label>Byte:</label>
                    <item>A component in the machine data hierarchy usually larger than a bit and
                        smaller than a word: now most often eight bits and the smallest addressable
                        unit of storage. A Byte typically holds one character. (From FOLDOC: <ref
                            target="http://foldoc.org/byte">http://foldoc.org/byte</ref>.)</item>

                    <label>Capture:</label>
                    <item> Process by which a Preservation Repository actively obtains Digital
                        Objects for long-term retention, for example, a harvesting program that
                        collects Web Sites. Note that the Capture process precedes the Ingest
                        process.</item>

                    <label>Checksum:</label>
                    <item>See Message Digest.</item>

                    <label>Complex Object:</label>
                    <item> See Compound Object.</item>

                    <label>Compound Object:</label>
                    <item> Digital Object composed of multiple Files: for example, a Web of text and
                        image Files</item>

                    <label>Compression:</label>
                    <item> Process of coding data to save storage space or transmission time.
                        Although data is already coded in digital form for computer processing, it
                        can often be coded more efficiently (using fewer bits). For example,
                        run-lengthencoding replaces strings of repeated characters (or other units
                        of data) with a single character and a count. There are many Compression
                        algorithms and utilities. Compressed data must be Decompressed before it can
                        be used. (From FOLDOC: <ref target="http://foldoc.org/compression"
                            >http://foldoc.org/compression</ref>.)</item>

                    <label>Container:</label>
                    <item>In the Data Dictionary, a Semantic Unit used to group other related
                        Semantic Units. A Container Semantic Unit takes no value of its own.</item>

                    <label>Core Preservation Metadata:</label>
                    <item>Semantic Units that most Preservation Repositories will need to know in
                        order to support the digital preservation process. Core Preservation
                        Metadata should be independent of factors such as specific preservation
                        strategy, type of archived content, and institutional context.</item>

                    <label>Data File:</label>
                    <item>See File.</item>

                    <label>Data Object:</label>
                    <item> See Digital Object.</item>

                    <label>Deaccession:</label>
                    <item>Process of removing a Digital Object from the inventory of a Preservation
                        Repository.</item>

                    <label>Deaccession:</label>
                    <item> Process of removing a Digital Object from the inventory of a Preservation
                        Repository.</item>

                    <label>Decompression:</label>
                    <item>Process of reversing the effects of data Compression. From FOLDOC: <ref
                            target="http://foldoc.org/decompress"
                        >http://foldoc.org/decompress</ref>.)</item>

                    <label>Decryption:</label>
                    <item> Process of employing any procedure used in cryptography to convert
                        ciphertext (encrypted data) into plaintext. (From FOLDOC: <ref
                            target="http://foldoc.org/decryption"
                        >http://foldoc.org/decryption</ref>.)</item>

                    <label>Deletion:</label>
                    <item> Process of removing a Digital Object from repository storage.</item>

                    <label>Dependency Relationship:</label>
                    <item> Relationship where one Digital Object requires another Object to support
                        its function, delivery, or the coherence of its content.</item>

                    <label>Derivation Relationship:</label>
                    <item>Relationship between Digital Objects where one Object is the result of a
                        Transformation performed on the other Object.</item>

                    <label>Descriptive Metadata:</label>
                    <item>Metadata that serves the purposes of discovery (how one finds a resource),
                        identification (how a resource can be distinguished from other, similar
                        resources), and selection (how to determine that a resource fills a
                        particular need). (From Caplan, Metadata Fundamentals for All Librarians,
                        ALA Editions, 2003</item>

                    <label>Digital Migration:</label>
                    <item> See Migration.</item>

                    <label>Digital Object:</label>
                    <item> Discrete unit of information in digital form. A Digital Object can be an
                        Intellectual Entity, Representation, File, Bitstream, or Filestream. Note
                        that the PREMIS definition of Digital Object differs from the definition
                        commonly used in the digital library community, which holds a digital object
                        to be a combination of identifier, metadata, and data.</item>

                    <label>Digital Provenance:</label>
                    <item> Documentation of processes in a digital Object’s life cycle. Digital
                        Provenance typically describes Agents responsible for the custody and
                        stewardship of Digital Objects, key Events that occur over the course of the
                        Digital Object’s life cycle, and other information associated with the
                        Digital Object’s creation, management, and preservation.</item>

                    <label>Digital Provenance:</label>
                    <item>Documentation of processes in a digital Object’s life cycle. Digital
                        Provenance typically describes Agents responsible for the custody and
                        stewardship of Digital Objects, key Events that occur over the course of the
                        Digital Object’s life cycle, and other information associated with the
                        Digital Object’s creation, management, and preservation.</item>

                    <label>Digital Provenance:</label>
                    <item>Documentation of processes in a digital Object’s life cycle. Digital
                        Provenance typically describes Agents responsible for the custody and
                        stewardship of Digital Objects, key Events that occur over the course of the
                        Digital Object’s life cycle, and other information associated with the
                        Digital Object’s creation, management, and preservation.</item>

                    <label>Digital Signature:</label>
                    <item> Value computed with a cryptographic algorithm and appended to data in
                        such a way that any recipient of the data can use the signature to verify
                        the data's origin and integrity. The electronic counterpart of a handwritten
                        signature on a hard copy document. From BBN Technologies: <ref
                            target="http://www.bbn.com/utility/glossary/D"
                            >http://www.bbn.com/utility/glossary/D</ref>.)</item>

                    <label>Digital Signature Validation:</label>
                    <item>Process of determining that a decrypted digital signature matches an
                        expected value when the correct keys, algorithms, and parameters have been
                        used. Validationconfirms the originator and Fixity of the signed Digital
                        Object.</item>

                    <label>Dissemination:</label>
                    <item>Process of retrieving a Digital Object from the Preservation Repository’s
                        archival storage and making it available to users. In the context of OAIS,
                        Dissemination involves transforming one or more Archival Information
                        Packages (AIP) into a Dissemination Information Package (DIP) and making it
                        available in a form suitable for the Preservation Repository’s Designated
                        Community.</item>

                    <label>Dissemination:</label>
                    <item> Process of retrieving a Digital Object from the Preservation Repository’s
                        archival storage and making it available to users. In the context of OAIS,
                        Dissemination involves transforming one or more Archival Information
                        Packages (AIP) into a Dissemination Information Package (DIP) and making it
                        available in a form suitable for the Preservation Repository’s Designated
                        Community.</item>

                    <label>Emulation:</label>
                    <item>Preservation strategy for overcoming technological obsolescence of
                        hardware and software by developing techniques for imitating obsolete
                        systems on future generations of computers. (From DPC: <ref
                            target="http://www.dpconline.org/advice/preservationhandbook/introduction/definitions-and-concepts?q=definitions"
                            >http://www.dpconline.org/advice/preservationhandbook/introduction/definitions-and-concepts?q=definitions</ref>.)</item>

                    <label>Encryption:</label>
                    <item>Process of employing any procedure used in cryptography to convert
                        plaintext into ciphertext (encrypted message) in order to prevent any but
                        the intended recipient from reading that data. Schematically, there are two
                        classes of encryption primitives: public-key cryptography and private-key
                        cryptography; they are generally used complementarily. Public-key encryption
                        algorithms include RSA; private-key algorithms include the obsolescent Data
                        Encryption Standard, the Advanced Encryption Standard, as well as RC4. (From
                        FOLDOC: <ref target="http://foldoc.org/encryption"
                            >http://foldoc.org/encryption</ref>.)</item>

                    <label>Environment:</label>
                    <item> Technology supporting a Digital Object in some way (e.g. by rendering or
                        executing it). Environments can consist of software, hardware, or a
                        combination of both. Environments can be described as Intellectual Entities
                        and captured and preserved in the Preservation Repository as
                        Representations, Files and/or Bitstreams.</item>

                    <label>Entity:</label>
                    <item>Abstraction for a set of “things” (environments, Events, etc.) described
                        by the same properties. The PREMIS data model defines four types of
                        Entities: Objects, Agents, Rights, and Events.</item>

                    <label>Event:</label>
                    <item>Preservation-relevant action that involves at least one Digital Object
                        and/or Agent known to the Preservation Repository.</item>

                    <label>Extensibility:</label>
                    <item>Property that Semantic Units in the PREMIS Data Dictionary may be
                        supplemented by externally defined Semantic Units, or replaced by more
                        granular Semantic Units, so long as there is no conflict in their definition
                        and use.</item>
                    <label>Extensibility:</label>
                    <item>Property that Semantic Units in the PREMIS Data Dictionary may be
                        supplemented by externally defined Semantic Units, or replaced by more
                        granular Semantic Units, so long as there is no conflict in their definition
                        and use.</item>

                    <label>File:</label>
                    <item> Named and ordered sequence of Bytes that is known by an operating system.
                        A File can be zero or more Bytes long, has access permissions, and has File
                        system statistics such as size and last modification date. A File also has a
                        Format.</item>

                    <label>Filestream:</label>
                    <item>Embedded Bitstream that can be transformed into a standalone File without
                        adding any additional information: for example, a TIFF image embedded within
                        a tar File, or an encoded EPS within an XML File.</item>

                    <label>Fixity:</label>
                    <item>Property of a Digital Object that indicates it has not changed between two
                        points in time.</item>

                    <label>Fixity Check:</label>
                    <item>Process of verifying that a File or Bitstream has not been changed during
                        a given period. A common Fixity Check method is to compute a Message Digest
                        (“hash”) at one point and recalculate the Message Digest at a later point;
                        if the digests are identical, the object has not been altered.</item>

                    <label>Format:</label>
                    <item>Specific, pre-established structure for the organization of a File,
                        Bitstream, or Filestream.</item>

                    <label>Format Migration:</label>
                    <item> See Migration.</item>

                    <label>Forward Migration:</label>
                    <item>See Migration.</item>

                    <label>Granularity:</label>
                    <item>Relative size, scale, level of detail, or depth of penetration that
                        characterizes an object or activity. “Level of granularity” may be used to
                        refer to the level of focus in a hierarchy or to refer to the level of
                        specificity of description.</item>

                    <label>Ingest:</label>
                    <item> Process of adding objects to a Preservation Repository’s storage system.
                        In the context of OAIS, Ingest includes services and functions that accept
                        Submission Information Packages (SIP) from producers, and transform them
                        into one or more Archival Information Packages (AIP) for long-term
                        retention.</item>

                    <label>Ingest:</label>
                    <item>Process of adding objects to a Preservation Repository’s storage system.
                        In the context of OAIS, Ingest includes services and functions that accept
                        Submission Information Packages (SIP) from producers, and transform them
                        into one or more Archival Information Packages (AIP) for long-term
                        retention.</item>

                    <label>Inhibitor:</label>
                    <item>Feature of a Digital Object intended to inhibit access, copying,
                        Dissemination, or Migration. Common Inhibitors are Encryption and password
                        protection.</item>

                    <label>Intellectual Entity:</label>
                    <item>Coherent set of content that is described as a unit: for example, a book,
                        a map, a photograph, a serial. An Intellectual Entity can include other
                        Intellectual Entities; for example, a Web Site can include a Web Page, a Web
                        Page can include a photograph. An Intellectual Entity may have one or more
                        Representations.</item>

                    <label>Media Migration:</label>
                    <item> Form of Replication, in which a Digital Object is copied onto a different
                        type of digital storage medium because the original medium is in danger of
                        obsolescence.</item>

                    <label>Media Migration:</label>
                    <item> Form of Replication, in which a Digital Object is copied onto a different
                        type of digital storage medium because the original medium is in danger of
                        obsolescence.</item>

                    <label>Media Refreshment:</label>
                    <item>Form of Replication, in which a Digital Object is copied onto a different
                        unit of storage of the same or similar medium as the original. Note: Media
                        Refreshment is used in preference to the definition of “refreshment” in the
                        OAIS Reference Model. OAIS defines refreshment s a “Digital Migration where
                        the effect is to replace a media instance with a copy that is sufficiently
                        exact that all Archival Storage hardware and software continues to run as
                        before.</item>

                    <label>Message Digest:</label>
                    <item>Result of applying a one-way hash function to a message. A Message Digest
                        is a value that is shorter than the message, but would be different if the
                        message were changed by even one character. (From BBN Technologies: <ref
                            target="http://www.bbn.com/utility/glossary/M"
                            >http://www.bbn.com/utility/glossary/M</ref>.) “Message” here means any
                        string of bits, such as a File or Bitstream. A Message Digest is often
                        informally called a “checksum”.</item>

                    <label>Message Digest Calculation:</label>
                    <item> Process by which a Message Digest is created for a Digital Objectresiding
                        in a Preservation Repository. See also Fixity Check.</item>

                    <label>Migration:</label>
                    <item>Preservation strategy in which a Transformation creates a version of a
                        Digital Objectin a different Format, where the new Format is compatible with
                        contemporary software and hardware environments. Ideally, Migration is
                        accomplished with as little loss of content, formatting and functionality as
                        possible, but the amount of information loss will vary depending on the
                        Formats and content types involved. Also called “format migration” and
                        “forward migration.”</item>

                    <label>Note:</label>
                    <item>Migration and Media Migration are used in preference to the definition of
                        “digital migration” in the OAIS Reference Model. OAIS defines digital
                        migration as the “transfer of digital information, while intending to
                        preserve it, within the OAIS. It is distinguished from transfers in general
                        by three attributes: 1) a focus on the preservation of the full information
                        content; 2) a perspective that the new archival implementation of the
                        information is a replacement for the old; and 3) an understanding that full
                        control and responsibility over all aspects of the transfer resides with the
                        OAIS.”</item>

                    <label>Namespace:</label>
                    <item>Set of names in which all names are unique. From FOLDOC: <ref
                            target="http://foldoc.org/namespace"
                        >http://foldoc.org/namespace</ref>.)</item>

                    <label>Normalization:</label>
                    <item>Form of Migration in which a version of a Digital Object is created in a
                        new Format with properties more conducive to preservation treatment.
                        Normalization is often implemented as part of the Ingest process.</item>
                    <label>Object:</label>
                    <item>See Digital Object.</item>
                    <label>Permission:</label>
                    <item> Agreement between a Rights holder and a Preservation Repository, allowing
                        the Preservation Repository to undertake some action.</item>

                    <label>Pre-Ingest:</label>
                    <item>Period in the life cycle of a Digital Object before it is Ingested into a
                        Preservation Repository.</item>

                    <label>Preservation Metadata:</label>
                    <item> Information a Preservation Repository uses to support the digital
                        preservation process.</item>

                    <label>Preservation Repository:</label>
                    <item> Repository that, either as its sole responsibility or as one of multiple
                        responsibilities, undertakes the long-term preservation of the Digital
                        Objects in its custody.</item>

                    <label>Profile:</label>
                    <item>Specification for a particular implementation of a Format. For example,
                        GeoTIFF is a profile of TIFF.</item>

                    <label>Quirk:</label>
                    <item>Any loss in functionality or change in the look and feel of a Digital
                        Object resulting from the preservation processes and procedures implemented
                        by a Preservation Repository. (See also the definition supplied by the
                        National Library of Australia: <ref
                            target="http://www.nla.gov.au/preserve/pmeta.html#14"
                            >http://www.nla.gov.au/preserve/pmeta.html#14</ref>.)</item>

                    <label>Refreshment:</label>
                    <item>See Media Refreshment.</item>

                    <label>Relationship:</label>
                    <item> Statement about an association between instances of Entities.</item>

                    <label>Render:</label>
                    <item>To make a Digital Object perceptible to a user, by displaying (for visual
                        materials), playing (for audio materials), or other means appropriate to the
                        Format of the Digital Object.</item>

                    <label>Replication:</label>
                    <item>Process of copying a Digital Object so that the copy is bit-wise identical
                        to the original. Media Migration and Media Refreshment are specific types of
                        Replication.</item>

                    <label>Representation:</label>
                    <item>Digital Object or physical object instantiating or embodying an
                        Intellectual Entity. A Representation that is a Digital Object is the set of
                        stored Files and Structural Metadataneeded to provide a complete rendition
                        of the Intellectual Entity.</item>

                    <label>Rights:</label>
                    <item>Assertions of one or more legal entitlements or permissions pertaining to
                        a Digital Object and/or an Agent.</item>

                    <label>Root:</label>
                    <item>The File that must be processed first in order to render a Representation
                        correctly.</item>

                    <label>Semantic Component:</label>
                    <item> Semantic Unit grouped with one or more other Semantic Units within a
                        Container. A Semantic Component may itself be a Container.</item>

                    <label>Semantic Unit:</label>
                    <item> Property of an Entity. Note: The PREMIS Data Dictionary makes a
                        distinction between a Semantic Unit and a metadata element. A Semantic Unit
                        is information that a Preservation Repository needs to know; a metadata
                        element is how that information is actually recorded. So in practice there
                        could be a one-to-one relationship between a Semantic Unit and its
                        associated metadata element; a one-to-many relationship; or even a
                        many-to-one relationship. Ultimately, the translation of a set of Semantic
                        Units into a corresponding set of metadata elements is an implementation
                        issue.</item>

                    <label>Simple Object:</label>
                    <item>Digital Object consisting of a single File, for example, a technical
                        report complete in one PDF File.</item>

                    <label>Store:</label>
                    <item>Write a File to some non-volatile storage device such as disk, tape, or
                        DVD.</item>

                    <label>Structural Metadata:</label>
                    <item>Describes the internal structure of digital resources and the
                        relationships between their parts. It is used to enable navigation and
                        presentation. (From NINCH Guide to Good Practice: <ref
                            target="http://www.nyu.edu/its/humanities/ninchguide/appendices/metadata.html"
                            >http://www.nyu.edu/its/humanities/ninchguide/appendices/metadata.html</ref>.)</item>

                    <label>Structural Relationship:</label>
                    <item>Relationship between parts of a Digital Object.</item>

                    <label>Technical Metadata:</label>
                    <item>Information describing physical (as opposed to intellectual) attributes or
                        properties of Digital Objects. Some Technical Metadata properties are Format
                        specific (that is, they pertain only to Digital Objects in a particular
                        Format, for example, color space associated with a TIFF image), while others
                        are Format independent (that is, they pertain to all Digital Objects
                        regardless of Format, for example, size in bytes).</item>

                    <label>Transformation:</label>
                    <item>Process performed on a Digital Object that results in one or more new
                        Digital Objects that are not bit-wise identical to the source Digital
                        Object. Examples of Transformationinclude Migration and
                        Normalization.</item>

                    <label>Validation:</label>
                    <item>Process of comparing a Digital Object with a standard or benchmark and
                        noting compliance or exceptions. For example, a File can be validated
                        against a File format specification or profile; a Representation can be
                        validated against criteria for completeness.</item>

                    <label>Viability:</label>
                    <item>Property of being readable from media.</item>

                    <label>Virus Check:</label>
                    <item>Process of scanning a File for malicious programs designed to corrupt
                        Digital Objects and systems.</item>

                    <label>Web Page:</label>
                    <item>A type of content found on the World Wide Web, usually in HTML/XHTML
                        format (the File extensions are typically .htm or .html) and with hypertext
                        links to enable navigation from one page or section to another. Web Pages
                        often use associated graphics Files to provide illustration, and these too
                        can be clickable links. (From Wikipedia: <ref
                            target="http://en.wikipedia.org/wiki/Web_page"
                            >http://en.wikipedia.org/wiki/Web_page</ref>)</item>

                    <label>Web Site:</label>
                    <item> A collection of interlinked Web Pages held in the same location on the
                        Internet, that is, HTML/XHTML documents accessible via HTTP on the internet;
                        the set of all publicly accessible Web Sites in existence comprise the World
                        Wide Web. The pages of a Web Site will be accessed from a common root URL,
                        the home page, and usually reside on the same physical server. The URLs of
                        the pages organize them into a hierarchy, although the hyperlinks between
                        them control how the reader perceives the overall structure and how the
                        traffic flows between the different parts of the Web Site. (From Wikipedia:
                            <ref target="http://en.wikipedia.org/wiki/Web_page"
                            >http://en.wikipedia.org/wiki/Web_page</ref>).</item>

                </list>
            </div>
        </back>
    </text>
</TEI>
